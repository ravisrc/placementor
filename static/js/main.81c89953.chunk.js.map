{"version":3,"sources":["Containers/UpdateProfile/UpdateProfile.module.css","Components/UserProfile/UserProfile.module.css","Containers/JobPosition/JobPosition.module.css","Components/UI/Navigation/Navigation.module.css","Containers/Auth/Register/Register.module.css","Components/UI/Footer/Footer.module.css","Containers/MessageBox/MessageBox.module.css","Components/MyApplications/Application/Application.module.css","Components/ViewApplication/ViewApplication.module.css","Containers/InstiBoard/Notice/Notice.module.css","Containers/Auth/Login/Login.module.css","Components/NotificationsBar/Notification/Notification.module.css","Containers/InstiBoard/NoticeReader/NoticeReader.module.css","Containers/JobPosition/PositionDetails/PositionDetails.module.css","Containers/JobPosition/CreatePosition/CreatePosition.module.css","Components/UI/Toolbar/Toolbar.module.css","Components/UI/Toolbar/UserBlock/UserBlock.module.css","Components/NotificationsBar/NotificationsBar.module.css","Components/UI/Toolbar/SearchBar/SearchBar.module.css","Components/UI/MainFrame/MainFrame.module.css","Components/UI/Toolbar/AuthBlock/AuthBlock.module.css","Components/UI/Error/Error.module.css","Containers/InstiBoard/InstiBoard.module.css","Components/JobProfiles/JobProfiles.module.css","Containers/InstiBoard/CreateNotice/CreateNotice.module.css","Components/SearchedNames/SearchedNames.module.css","Components/UI/Content/Content.module.css","Components/MyApplications/MyApplications.module.css","Components/UnreadPositions/UnreadPositions.module.css","App.module.css","store/actions/actionTypes.js","store/actions/actions.js","LinkNames.js","store/actions/getData.js","store/actions/auth.js","hoc/Wrap/Wrap.js","Components/UI/Toolbar/UserBlock/UserBlock.js","Components/UI/Toolbar/AuthBlock/AuthBlock.js","Components/UI/Toolbar/SearchBar/SearchBar.js","Components/UI/Toolbar/Toolbar.js","Components/UI/Footer/Footer.js","Components/UI/Content/Content.js","DateFromStamp.js","Components/NotificationsBar/Notification/Notification.js","Components/NotificationsBar/NotificationsBar.js","Components/UI/Navigation/Navigation.js","Components/UI/MainFrame/MainFrame.js","Containers/MessageBox/MessageBox.js","Containers/InstiBoard/Notice/Notice.js","Containers/InstiBoard/InstiBoard.js","Components/MyApplications/Application/Application.js","Components/MyApplications/MyApplications.js","Components/JobProfiles/JobProfiles.js","Containers/InstiBoard/NoticeReader/NoticeReader.js","Containers/JobPosition/PositionDetails/PositionDetails.js","Containers/JobPosition/JobPosition.js","Components/ViewApplication/ViewApplication.js","Components/UserProfile/UserProfile.js","Containers/Auth/Login/Login.js","Containers/UpdateProfile/UpdateProfile.js","Containers/Auth/Register/Register.js","Containers/Auth/Logout/Logout.js","Containers/InstiBoard/CreateNotice/CreateNotice.js","Containers/JobPosition/CreatePosition/CreatePosition.js","Components/SearchedNames/SearchedNames.js","Components/UI/Error/Error.js","Components/UnreadPositions/UnreadPositions.js","App.js","store/reducer.js","reportWebVitals.js","index.js"],"names":["module","exports","AUTH_START","AUTH_LOGIN","AUTH_REGISTER","AUTH_LOGOUT","AUTH_FAIL","NORMAL_FAIL","CLEAR_ERROR","LOAD_INFORMATION","REMOVE_NOTIFICATION","FETCH_USER_NAMES","FETCH_USER_NAMES_ERROR","GET_USER_PROFILE","GET_USER_PROFILE_ERROR","APPLY_TO_POSITION","RELEASE_POSITION","CREATE_MESSAGE","CREATE_FEEDBACK","LOAD_POSITION","LOAD_APPLICATION","SELECT_APPLICATION","UPDATE_PROFILE","markAsRead","entityType","entityId","dispatch","axiosOptions","method","url","process","data","type","entity_id","headers","authorization","JSON","parse","localStorage","getItem","axios","then","response","actionTypes","payload","catch","error","message","singleJobPosition","singleInstiBoardNotice","getData","getState","timestamp","lastDataFetchStamp","messages","positions","unreleasedpositions","notices","applications","notifications","current_user","username","current_u_type","userType","loadedMessages","author","undefined","recipient","id","read","latestTime","update_time","time","title","link","content","sender","loadedNotices","notice","LinkConstants","subject","loadedPositions","position","position_title","release_time","description","company","create_time","loadedApplications","application","status","position_id","setTimeout","setAuthError","wrap","props","children","connect","state","userId","className","classes","userBlock","profile_pic","user_data","links","to","authBlock","loginBlock","activeClassName","activeLink","SearchBar","searched","searchBar","searchInput","placeholder","value","this","onChange","e","setState","target","searchBtn","onClick","searchUsers","blockLink","React","Component","string","searchQuery","usernames","names","Wrap","toolbar","logo","UserBlock","AuthBlock","footer","year","Date","getFullYear","join","href","src","Toolbar","ContentDiv","Footer","dateFromStamp","toDateString","notification","special","header","notification_objs","notificationKey","push","sort","a","b","Notification","length","NotificationsBar","list","emptyMsg","usertype","Links","navigationLink","exact","from","navBar","mainFrame","MainFrame","leftSide","rightSide","Navigation","MessageBox","unreadMessages","i","pushUnreadMessages","userMsgsSet","document","userSets","userMessages","userMsg","userMsg_","removeMessageNotification","unshift","noticeBox","is_sent","is_recieved","insider","msgBlocks","name","subjectInput","writeMessage","uname","message_content","recipient_username","msg_content","message_obj","actionCreators","is_position","unread","InstiBoard","notice_objs","notice_id","blockLinks","Notice","createNoticeLink","createNotice","getdata","classname","pending","rejected","selected","position_name","company_name","appl_time","stat_time","applications_list","applications_objs","applicationKey","Application","JobProfiles","noticeReader","noticeId","match","params","actions","withRouter","PositionDetails","details","deadline","CTC","depts","degrees","JobPosition","resumeUploadOwn","resumeLink","feedback","positionId","getPosition","profile","features","feedbacks","hasApplied","dept","degree","includes","now","options","notable","disabled","statusBar","able","done","upload_file","toggleFile","prevstate","for","File","resume_link","applyToPosition","releasePosition","currApplications","currentPosApplications","currapplcnid","currapplcn","statusText","BlockLink","applicant","candidateName","cgpa","currfeedbacks","currentPosFeedbacks","currfeedback","authorName","contentInput","submitFeedback","userProfile","profile_id","application_obj","currentUserType","Feedback","author_name","feedback_content","ViewApplication","applicationDetails","currentApplication","buttons","profileDetails","selectApplication","current_application","application_id","applId","newStatus","applicationId","new_status","UserProfile","getProfile","searchedProfile","pic","content_container","head","email","roll_num","Login","isValid","password","errors","submitHandler","login","onChangeValue","key","loginContainer","loginForm","inputForm","errorField","errorMsg","submit","authError","pass","user_id","userEmail","user_type","authToken","auth_token","UpdateProfile","updateprofile","regContainer","regForm","Register","accountType","reenterpass","gen_id","register","changeType","typeSelector","btnType","active","successMsg","authSuccess","genuineId","Logout","logout","CreateNotice","submitted","writeNotice","notice_obj","CreatePosition","positionName","ctc","jobDescription","d","getTime","createPosition","companyName","profileName","searchedNames","searchedName","searchedNameLink","ErrorDisplay","startsWith","ok","clearError","UnreadPositions","App","stakeholder_type","autoLogin","Routes","path","component","NoticeReader","MyApplications","SearchedNames","Error","Content","initialState","searchError","profileError","unread_positions","notificationsInterval","reducer","action","setItem","stringify","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.81c89953.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"regContainer\":\"UpdateProfile_regContainer__F-CcT\",\"regForm\":\"UpdateProfile_regForm__1AhOE\",\"pic\":\"UpdateProfile_pic__1iqm7\",\"header\":\"UpdateProfile_header__2gYiy\",\"typeSelector\":\"UpdateProfile_typeSelector__1JNWk\",\"btnType\":\"UpdateProfile_btnType__3vdq7\",\"active\":\"UpdateProfile_active__374GS\",\"inputForm\":\"UpdateProfile_inputForm__2FfSI\",\"errorField\":\"UpdateProfile_errorField__veqhE\",\"errorMsg\":\"UpdateProfile_errorMsg__2cDkS\",\"successMsg\":\"UpdateProfile_successMsg__1Cyx9\",\"submit\":\"UpdateProfile_submit__HlrT5\",\"userProfile\":\"UpdateProfile_userProfile__1u5pn\",\"username\":\"UpdateProfile_username__3G6xd\",\"content_container\":\"UpdateProfile_content_container__3FxXp\",\"head\":\"UpdateProfile_head__2BGeZ\",\"content\":\"UpdateProfile_content__2JUcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfile\":\"UserProfile_userProfile__3Fyr_\",\"pic\":\"UserProfile_pic__1tucM\",\"username\":\"UserProfile_username__2Dxyy\",\"content_container\":\"UserProfile_content_container__1U8VN\",\"head\":\"UserProfile_head__22tf8\",\"content\":\"UserProfile_content__1pifD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"File\":\"JobPosition_File__dR0sn\",\"features\":\"JobPosition_features__yHpHQ\",\"options\":\"JobPosition_options__1ixZ2\",\"done\":\"JobPosition_done__37zZY\",\"notable\":\"JobPosition_notable__1zzE8\",\"application\":\"JobPosition_application__2wdeH\",\"pending\":\"JobPosition_pending__1Lag3\",\"rejected\":\"JobPosition_rejected__2kPst\",\"selected\":\"JobPosition_selected__2X-Kz\",\"applicant\":\"JobPosition_applicant__SrSaV\",\"dept\":\"JobPosition_dept__1nrAc\",\"status\":\"JobPosition_status__3Igr5\",\"BlockLink\":\"JobPosition_BlockLink__1Rs4O\",\"subjectInput\":\"JobPosition_subjectInput__u4A28\",\"contentInput\":\"JobPosition_contentInput__3YRMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Navigation_navBar__2uWRg\",\"navigationLink\":\"Navigation_navigationLink__1FknW\",\"activeLink\":\"Navigation_activeLink__GNZL7\",\"profileLink\":\"Navigation_profileLink__luEWn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regContainer\":\"Register_regContainer__2IYeF\",\"regForm\":\"Register_regForm__3bxxC\",\"header\":\"Register_header__2xDZS\",\"typeSelector\":\"Register_typeSelector__-hXGx\",\"btnType\":\"Register_btnType__1Zt7l\",\"active\":\"Register_active__1iyLm\",\"inputForm\":\"Register_inputForm__1U2xg\",\"errorField\":\"Register_errorField__3xSau\",\"errorMsg\":\"Register_errorMsg__piTwy\",\"successMsg\":\"Register_successMsg__2Cfik\",\"submit\":\"Register_submit__1rRl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__124kB\",\"fpt\":\"Footer_fpt__7WRGR\",\"clearboth\":\"Footer_clearboth__3426O\",\"fpt2\":\"Footer_fpt2__2D742\",\"fpt3\":\"Footer_fpt3__3dS8a\",\"fpt4\":\"Footer_fpt4__RmJTB\",\"logoholdersm\":\"Footer_logoholdersm___pJ70\",\"logo\":\"Footer_logo__1_M-M\",\"copyRights\":\"Footer_copyRights__gwUW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBox\":\"MessageBox_noticeBox__3Kd-4\",\"insider\":\"MessageBox_insider__3zrxQ\",\"header\":\"MessageBox_header__3LkBo\",\"title\":\"MessageBox_title__2Zx2U\",\"time\":\"MessageBox_time__386_5\",\"message\":\"MessageBox_message__wsshj\",\"is_sent\":\"MessageBox_is_sent__1q6gt\",\"is_recieved\":\"MessageBox_is_recieved__35WQR\",\"unread\":\"MessageBox_unread__2WR8y\",\"is_position\":\"MessageBox_is_position__2DD0m\",\"msgBlocks\":\"MessageBox_msgBlocks__2UtUo\",\"username\":\"MessageBox_username__1XvJW\",\"subjectInput\":\"MessageBox_subjectInput__37hvw\",\"contentInput\":\"MessageBox_contentInput___eBOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"application\":\"Application_application__3OhsP\",\"pending\":\"Application_pending__3HUG8\",\"rejected\":\"Application_rejected__29Wcf\",\"selected\":\"Application_selected__4JJZ2\",\"position\":\"Application_position__3yQkW\",\"company\":\"Application_company__8VRGa\",\"time\":\"Application_time__3U8ji\",\"status\":\"Application_status__39pB9\",\"unread\":\"Application_unread__13NIE\",\"accepted\":\"Application_accepted__3HjE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"ViewApplication_options__2WUqv\",\"done\":\"ViewApplication_done__1FWtW\",\"notable\":\"ViewApplication_notable__32kb_\",\"BlockLink\":\"ViewApplication_BlockLink__1a-93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBox\":\"Notice_noticeBox__13wt9\",\"header\":\"Notice_header__3UDM8\",\"title\":\"Notice_title__3trjG\",\"time\":\"Notice_time__1ioXS\",\"message\":\"Notice_message__1kA10\",\"is_position\":\"Notice_is_position__3WkDy\",\"unread\":\"Notice_unread__29teY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3lGWt\",\"loginForm\":\"Login_loginForm__28Tit\",\"header\":\"Login_header__katYL\",\"typeSelector\":\"Login_typeSelector__1Cjwn\",\"btnType\":\"Login_btnType__1RpND\",\"active\":\"Login_active__27ZtK\",\"inputForm\":\"Login_inputForm__3cJun\",\"errorField\":\"Login_errorField__2q6Z1\",\"errorMsg\":\"Login_errorMsg__126VI\",\"submit\":\"Login_submit__mCQxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2oOE7\",\"header\":\"Notification_header__WT289\",\"title\":\"Notification_title__2vCry\",\"time\":\"Notification_time__1BSfi\",\"message\":\"Notification_message__5rm1j\",\"special\":\"Notification_special__319oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"NoticeReader_notice__2Wz_4\",\"header\":\"NoticeReader_header__smpG4\",\"title\":\"NoticeReader_title__1ck6f\",\"time\":\"NoticeReader_time__304F5\",\"message\":\"NoticeReader_message__iDXK7\",\"sender\":\"NoticeReader_sender__13eAV\",\"special\":\"NoticeReader_special__2yPnH\",\"unread\":\"NoticeReader_unread__yNx7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"PositionDetails_position__dMmRs\",\"header\":\"PositionDetails_header__2BGUw\",\"position_title\":\"PositionDetails_position_title__2DI9q\",\"company_name\":\"PositionDetails_company_name__2VImn\",\"description\":\"PositionDetails_description__2H0uk\",\"details\":\"PositionDetails_details__3rjFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subjectInput\":\"CreatePosition_subjectInput__y5WeJ\",\"contentInput\":\"CreatePosition_contentInput__1xNO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1CU2b\",\"logo\":\"Toolbar_logo__34LDw\",\"userBlock\":\"Toolbar_userBlock__2LEmW\",\"authBlock\":\"Toolbar_authBlock__2iiOQ\",\"searchBar\":\"Toolbar_searchBar__3eQam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"UserBlock_userBlock__1vPIU\",\"user_data\":\"UserBlock_user_data__3NLz1\",\"profile_pic\":\"UserBlock_profile_pic__15xQs\",\"username\":\"UserBlock_username__2QGUs\",\"links\":\"UserBlock_links__1k8CE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationsBar\":\"NotificationsBar_NotificationsBar__2Ww5W\",\"header\":\"NotificationsBar_header__J4Zwx\",\"list\":\"NotificationsBar_list__2rfHm\",\"blockLink\":\"NotificationsBar_blockLink__2Eaf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__3YEee\",\"searchInput\":\"SearchBar_searchInput__cJ24p\",\"searchBtn\":\"SearchBar_searchBtn__1mFdT\",\"blockLink\":\"SearchBar_blockLink__2BcR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainFrame\":\"MainFrame_MainFrame__2JdJF\",\"leftSide\":\"MainFrame_leftSide__fgf1J\",\"rightSide\":\"MainFrame_rightSide__1D8qy\",\"content\":\"MainFrame_content__29xlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"AuthBlock_loginBlock__2hAQ6\",\"activeLink\":\"AuthBlock_activeLink__3TPDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"Error_errorMsg__1AVm1\",\"ErrorDisplay\":\"Error_ErrorDisplay__102se\",\"ok\":\"Error_ok__18-ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockLinks\":\"InstiBoard_blockLinks__2L6hW\",\"createNotice\":\"InstiBoard_createNotice__5jcYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createNotice\":\"JobProfiles_createNotice__2QnPS\",\"blockLinks\":\"JobProfiles_blockLinks__BBp0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subjectInput\":\"CreateNotice_subjectInput__2c5pn\",\"contentInput\":\"CreateNotice_contentInput__2xLHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchedName\":\"SearchedNames_searchedName__2bsIm\",\"searchedNameLink\":\"SearchedNames_searchedNameLink__268Sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentDiv\":\"Content_ContentDiv__ayB9A\",\"SideBarSubjects\":\"Content_SideBarSubjects__17X8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockLinks\":\"MyApplications_blockLinks__1vQpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockLinks\":\"UnreadPositions_blockLinks__2Eklj\",\"createNotice\":\"UnreadPositions_createNotice__1WL82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3SxE5\",\"App-logo\":\"App_App-logo__hFbAo\",\"App-logo-spin\":\"App_App-logo-spin__1sYOp\",\"App-header\":\"App_App-header__2mG7m\",\"App-link\":\"App_App-link__3Jnr1\"};","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_LOGIN = \"AUTH_LOGIN\";\r\nexport const AUTH_REGISTER = \"AUTH_REGISTER\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const NORMAL_FAIL = \"NORMAL_FAIL\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\nexport const LOAD_INFORMATION = \"LOAD_INFORMATION\";\r\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\n\r\nexport const FETCH_USER_NAMES = \"FETCH_USER_NAMES\";\r\nexport const FETCH_USER_NAMES_ERROR = \"FETCH_USER_NAMES_ERROR\";\r\n\r\nexport const GET_USER_PROFILE = \"GET_USER_PROFILE\";\r\nexport const GET_USER_PROFILE_ERROR = \"GET_USER_PROFILE_ERROR\";\r\n\r\nexport const APPLY_TO_POSITION = \"APPLY_TO_POSITION\";\r\nexport const APPLY_TO_POSITION_ERROR = \"APPLY_TO_POSITION_ERROR\";\r\n\r\nexport const UPLOAD_RESUME = \"UPLOAD_RESUME\";\r\nexport const UPLOAD_RESUME_ERROR = \"UPLOAD_RESUME_ERROR\";\r\n\r\nexport const RELEASE_POSITION = \"RELEASE_POSITION\";\r\nexport const RELEASE_POSITION_ERROR = \"RELEASE_POSITION_ERROR\";\r\n\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const CREATE_MESSAGE_ERROR = \"CREATE_MESSAGE_ERROR\";\r\n\r\nexport const CREATE_NOTICE = \"CREATE_NOTICE\";\r\nexport const CREATE_NOTICE_ERROR = \"CREATE_NOTICE_ERROR\";\r\n\r\nexport const CREATE_FEEDBACK = \"CREATE_FEEDBACK\";\r\nexport const CREATE_FEEDBACK_ERROR = \"CREATE_FEEDBACK_ERROR\";\r\n\r\nexport const CREATE_POSITION = \"CREATE_POSITION\";\r\nexport const CREATE_POSITION_ERROR = \"CREATE_POSITION_ERROR\";\r\n\r\nexport const LOAD_POSITION = \"LOAD_POSITION\";\r\nexport const LOAD_POSITION_ERROR = \"LOAD_POSITION_ERROR\";\r\n\r\nexport const LOAD_APPLICATION = \"LOAD_APPLICATION\";\r\nexport const LOAD_APPLICATION_ERROR = \"LOAD_APPLICATION_ERROR\";\r\n\r\nexport const SELECT_APPLICATION = \"SELECT_APPLICATION\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const clearError = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_ERROR,\r\n    };\r\n};\r\n\r\nexport const markAsRead = (entityType, entityId) => {\r\n    return (dispatch) => {\r\n        const axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/readreceipt`,\r\n            data: {\r\n                type: entityType,\r\n                entity_id: entityId,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.REMOVE_NOTIFICATION,\r\n                    payload: {\r\n                        entityType: entityType,\r\n                        entityId: entityId,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n\r\n        dispatch({\r\n            type: actionTypes.REMOVE_NOTIFICATION,\r\n            payload: {\r\n                entityType: entityType,\r\n                entityId: entityId,\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectApplication = (applicationId, new_status) => {\r\n    return (dispatch) => {\r\n        const axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/selectapplication`,\r\n            data: {\r\n                application_id: applicationId,\r\n                new_status: new_status,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.SELECT_APPLICATION,\r\n                    payload: {\r\n                        message: response.data.message,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchUserNames = (searchQuery) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/fetchusernames`,\r\n            data: {\r\n                string: searchQuery,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_USER_NAMES,\r\n                    payload: {\r\n                        usernames: response.data.names,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const getProfile = (username) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/getprofile`,\r\n            data: {\r\n                username: username,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_PROFILE,\r\n                    payload: { profile: response.data.profile },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const releasePosition = (positionId) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/releaseposition`,\r\n            data: {\r\n                position_id: positionId,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.RELEASE_POSITION,\r\n                    payload: {\r\n                        position: response.data.position,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const createMessage = (recipient, message_content) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/createmessage`,\r\n            data: {\r\n                recipient_username: recipient,\r\n                msg_content: message_content,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.CREATE_MESSAGE,\r\n                    payload: {\r\n                        message_obj: response.data.message_obj,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const createNotice = (subject, content) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/createnotice`,\r\n            data: {\r\n                subject: subject,\r\n                content: content,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.CREATE_NOTICE,\r\n                    payload: {\r\n                        notice_obj: response.data.notice_obj,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const applyToPosition = (positionId, resumeLink) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/application`,\r\n            data: {\r\n                profile_id: positionId,\r\n                resume_link: resumeLink,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.APPLY_TO_POSITION,\r\n                    payload: {\r\n                        application: response.data.application_obj,\r\n                        message: response.data.message,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const writeFeedback = (positionId, content) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/writefeedback`,\r\n            data: {\r\n                profile_id: positionId,\r\n                feedback_content: content,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.CREATE_FEEDBACK,\r\n                    payload: {\r\n                        message: response.data.message,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const createPosition = (\r\n    positionName,\r\n    companyName,\r\n    deadline,\r\n    ctc,\r\n    jobDescription,\r\n    depts,\r\n    degrees\r\n) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/createposition`,\r\n            data: {\r\n                profileName: positionName,\r\n                companyName: companyName,\r\n                deadline: deadline,\r\n                CTC: ctc,\r\n                description: jobDescription,\r\n                depts: depts,\r\n                degrees: degrees,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.CREATE_POSITION,\r\n                    payload: {\r\n                        position: response.data.position,\r\n                    },\r\n                });\r\n            })\r\n\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const getPosition = (positionId) => {\r\n    return (dispatch, getState) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/positiondetails`,\r\n            data: {\r\n                positionId: positionId,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                let currentUserType = getState().userType;\r\n\r\n                if (currentUserType === \"recruiter\") {\r\n                    let applications = [];\r\n                    for (let application of response.data.applications) {\r\n                        applications.push({\r\n                            candidateName: application.name,\r\n                            cgpa: application.cgpa,\r\n                            dept: application.dept,\r\n                            degree: application.degree,\r\n                            status: application.status,\r\n                            id: application.id,\r\n                        });\r\n                    }\r\n                    dispatch({\r\n                        type: actionTypes.LOAD_POSITION,\r\n                        payload: {\r\n                            currentPosApplications: applications,\r\n                            currentPosFeedbacks: [],\r\n                        },\r\n                    });\r\n                } else if (\r\n                    currentUserType === \"alumni\" ||\r\n                    currentUserType === \"student\"\r\n                ) {\r\n                    let feedbacks = [];\r\n                    for (let feedback of response.data.Feedback) {\r\n                        feedbacks.push({\r\n                            authorName: feedback.author_name,\r\n                            time: feedback.time,\r\n                            content: feedback.content,\r\n                        });\r\n                    }\r\n                    dispatch({\r\n                        type: actionTypes.LOAD_POSITION,\r\n                        payload: {\r\n                            currentPosApplications: [],\r\n                            currentPosFeedbacks: feedbacks,\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const removeMessageNotification = (author) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_NOTIFICATION,\r\n            payload: {\r\n                entityType: \"message\",\r\n                entityId: author,\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport const applicationDetails = (application_id) => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/applicationdetails`,\r\n            data: {\r\n                application_id: application_id,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.LOAD_APPLICATION,\r\n                    payload: {\r\n                        application: response.data.application,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Network Connection Failed. Please try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\n// export const applicationDetails = () => {\r\n//     (dispatch) => {\r\n//         let axiosOptions = {\r\n//             method: \"GET\",\r\n//             url: `${process.env.REACT_APP_DATABASE_URI}/applicationdetails`,\r\n//             data: {\r\n//                 position_id: positionId,\r\n//             },\r\n//         };\r\n\r\n//         axios(axiosOptions)\r\n//             .then((response) => {\r\n//                 dispatch({\r\n//                     type: actionTypes.LOAD_APPLICATION,\r\n//                     payload: {\r\n//                         resumeLink: application.resume_link,\r\n//                         positionId: application.position_id,\r\n//                         status: application.applcn_status,\r\n//                     },\r\n//                 });\r\n//             })\r\n//             .catch((error) => {\r\n//                 dispatch({\r\n//                     type: actionTypes.LOAD_APPLICATION_ERROR,\r\n//                     payload: {\r\n//                         errorMsg: error.response.data.message,\r\n//                     },\r\n//                 });\r\n//             });\r\n//     };\r\n// };\r\n","export const singleJobPosition = \"/jobposition\";\r\nexport const singleApplication = \"/application\";\r\nexport const singlePersonMessages = \"/messages\";\r\nexport const singleInstiBoardNotice = \"/instiboard\";","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport * as LinkConstants from \"../../LinkNames\";\r\n\r\nexport const getData_ = () => {\r\n    return (dispatch) => {\r\n        dispatch(getData_());\r\n    };\r\n};\r\n\r\nexport const getData = () => {\r\n    return (dispatch, getState) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/getdata`,\r\n            data: {\r\n                timestamp: getState().lastDataFetchStamp,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                let messages = getState().messages;\r\n                let positions = getState().positions;\r\n                let unreleasedpositions = getState().unreleasedpositions;\r\n                let notices = getState().notices;\r\n                let applications = getState().applications;\r\n                let notifications = getState().notifications;\r\n                // Current logged in username\r\n                let current_user = getState().username;\r\n                // Current logged in user typee\r\n                let current_u_type = getState().userType;\r\n\r\n                let loadedMessages = response.data.messages;\r\n                // this will be an array of messages both sent and recieved\r\n                // let loadedMessages = [\r\n                //     {\r\n                //         id: 1,\r\n                //         author: \"current_user\",\r\n                //         recipient: \"recipient_name_1\",\r\n                //         content: \"Content 1\",\r\n                //         time: 789654123,\r\n                //         update_time: 987456321,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 2,\r\n                //         author: \"current_user\",\r\n                //         recipient: \"recipient_name_1\",\r\n                //         content: \"Content 2\",\r\n                //         time: 789654124,\r\n                //         update_time: 987456322,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 3,\r\n                //         author: \"recipient_name_2\",\r\n                //         recipient: \"current_user\",\r\n                //         content: \"Content 3\",\r\n                //         time: 789654134,\r\n                //         update_time: 987456345,\r\n                //         read: false,\r\n                //     },\r\n                //     {\r\n                //         id: 4,\r\n                //         author: \"recipient_name_4\",\r\n                //         recipient: \"current_user\",\r\n                //         content: \"Content 4\",\r\n                //         time: 789654204,\r\n                //         update_time: 987456245,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 5,\r\n                //         author: \"recipient_name_4\",\r\n                //         recipient: \"current_user\",\r\n                //         content: \"Content 5\",\r\n                //         time: 789654204,\r\n                //         update_time: 987456245,\r\n                //         read: false,\r\n                //     },\r\n                // ];\r\n\r\n                for (let message of loadedMessages) {\r\n                    // Authoured Messages\r\n                    if (message.author === current_user) {\r\n                        // First message related to this recipient\r\n                        if (messages[`${message.recipient}`] === undefined) {\r\n                            messages[`${message.recipient}`] = {};\r\n                        }\r\n                        messages[`${message.recipient}`][\r\n                            `${message.id}`\r\n                        ] = message;\r\n                    }\r\n                    // Recieved Messages\r\n                    else {\r\n                        // First message related to this author\r\n                        if (messages[`${message.author}`] === undefined) {\r\n                            messages[`${message.author}`] = {};\r\n                        }\r\n                        messages[`${message.author}`][\r\n                            `${message.id}`\r\n                        ] = message;\r\n                    }\r\n\r\n                    // recipients and authors are names not ids\r\n                    // Notifications regarding the Messages\r\n\r\n                    if (message.recipient === current_user) {\r\n                        if (message.read === false) {\r\n                            let latestTime = message.update_time;\r\n                            if (\r\n                                notifications[\r\n                                    `notifymessage${message.author}`\r\n                                ] !== undefined\r\n                            ) {\r\n                                latestTime =\r\n                                    latestTime >\r\n                                    notifications[\r\n                                        `notifymessage${message.author}`\r\n                                    ].time\r\n                                        ? latestTime\r\n                                        : notifications[\r\n                                              `notifymessage${message.author}`\r\n                                          ].time;\r\n                            }\r\n                            notifications[`notifymessage${message.author}`] = {\r\n                                title: `New messages from @${message.author} !!`,\r\n                                id: `notifymessage${message.author}`,\r\n                                link: `${LinkConstants.singlePersonMessages}/${message.author}`,\r\n                                time: latestTime,\r\n                                content: ``,\r\n                                sender: `${message.author}`,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let loadedNotices = response.data.notices;\r\n                // // this will be an array of notices in the instiboard\r\n                // let loadedNotices = [\r\n                //     {\r\n                //         id: 1,\r\n                //         author: \"admin\",\r\n                //         subject: \"Subject_1\",\r\n                //         content: \"Content 1\",\r\n                //         time: 789654234,\r\n                //         update_time: 942456321,\r\n                //         read: false,\r\n                //     },\r\n                //     {\r\n                //         id: 2,\r\n                //         author: \"admin\",\r\n                //         subject: \"Subject_2\",\r\n                //         content: \"Content 2\",\r\n                //         time: 789652234,\r\n                //         update_time: 987423421,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 3,\r\n                //         author: \"admin\",\r\n                //         subject: \"Subject_3\",\r\n                //         content: \"Content 3\",\r\n                //         time: 789423123,\r\n                //         update_time: 984236321,\r\n                //         read: false,\r\n                //     },\r\n                //     {\r\n                //         id: 4,\r\n                //         author: \"admin\",\r\n                //         subject: \"Subject_4\",\r\n                //         content: \"Content 4\",\r\n                //         time: 782343123,\r\n                //         update_time: 984425321,\r\n                //         read: true,\r\n                //     },\r\n                // ];\r\n\r\n                for (let notice of loadedNotices) {\r\n                    // Authoured Messages\r\n                    // First message related to this recipient\r\n                    notices[`${notice.id}`] = notice;\r\n\r\n                    if (notice.read === false) {\r\n                        let latestTime = notice.update_time;\r\n                        if (\r\n                            notifications[`notifynotice${notice.id}`] !==\r\n                            undefined\r\n                        ) {\r\n                            latestTime =\r\n                                latestTime >\r\n                                notifications[`notifynotice${notice.id}`].time\r\n                                    ? latestTime\r\n                                    : notifications[`notifynotice${notice.id}`]\r\n                                          .time;\r\n                        }\r\n                        notifications[`notifynotice${notice.id}`] = {\r\n                            title: `New notice in InstiBoard !!`,\r\n                            id: `notifynotice${notice.id}`,\r\n                            link: `${LinkConstants.singleInstiBoardNotice}/${notice.id}`,\r\n                            time: latestTime,\r\n                            content: `${notice.subject}`,\r\n                            sender: `${notice.author}`,\r\n                        };\r\n                    }\r\n                }\r\n\r\n                let loadedPositions = response.data.positions;\r\n                // this will be array of the positions releadsed/created (the type depends on the userr tpy)\r\n                // let loadedPositions = [\r\n                //     {\r\n                // id: 1,\r\n                // position_title: \"position_title\",\r\n                // description: \"description\",\r\n                // company: \"Syska\",\r\n                // company_id: 2,\r\n                // CTC: 10000000,\r\n                // depts: \"CS, EC, EE, ME\",\r\n                // degrees: \"BT, DD, MT\",\r\n                // create_time: 789654234,\r\n                // release_time: null,\r\n                // deadline: 956454789,\r\n                // update_time: 942456321,\r\n                // read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 2,\r\n                //         position_title: \"position_title 2\",\r\n                //         description: \"description 2\",\r\n                //         company: \"Syska 2\",\r\n                //         company_id: 4,\r\n                //         CTC: 10000000,\r\n                //         depts: \"CS, EC, CE, ME\",\r\n                //         degrees: \"BT, DD, MT\",\r\n                //         create_time: 789589634,\r\n                //         release_time: 942401943,\r\n                //         deadline: 956459630,\r\n                //         update_time: 942015421,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 3,\r\n                //         position_title: \"position_title 3\",\r\n                //         description: \"description 3\",\r\n                //         company: \"Syska3 \",\r\n                //         company_id: 4,\r\n                //         CTC: 10000000,\r\n                //         depts: \"CS, EC, CE, ME\",\r\n                //         degrees: \"BT, DD, MT\",\r\n                //         create_time: 789589334,\r\n                //         release_time: 942403943,\r\n                //         deadline: 956459633,\r\n                //         update_time: 942015431,\r\n                //         read: false,\r\n                //     },\r\n                // ];\r\n\r\n                for (let position of loadedPositions) {\r\n                    if (\r\n                        current_u_type === \"student\" ||\r\n                        current_u_type === \"alumni\"\r\n                    ) {\r\n                        positions[`${position.id}`] = position;\r\n                        if (position.read === false) {\r\n                            notifications[`notifyposition${position.id}`] = {\r\n                                title: `New position released ${position.position_title} !!`,\r\n                                id: `notifyposition${position.id}`,\r\n                                link: `${LinkConstants.singleJobPosition}/${position.id}`,\r\n                                time: position.release_time,\r\n                                content: `${position.description}`,\r\n                                sender: `${position.company}`,\r\n                            };\r\n                        }\r\n                    }\r\n                    if (current_u_type === \"instiadmin\") {\r\n                        if (position.release_time === null) {\r\n                            unreleasedpositions[`${position.id}`] = position;\r\n                        }\r\n                        positions[`${position.id}`] = position;\r\n                        if (position.read === false) {\r\n                            notifications[`notifyposition${position.id}`] = {\r\n                                title: `New position created ${position.position_title} !!`,\r\n                                id: `notifyposition${position.id}`,\r\n                                link: `${LinkConstants.singleJobPosition}/${position.id}`,\r\n                                time: position.create_time,\r\n                                content: `${position.description}`,\r\n                                sender: `${position.company}`,\r\n                            };\r\n                        }\r\n                    }\r\n                    if (current_u_type === \"recruiter\") {\r\n                        positions[`${position.id}`] = position;\r\n                        if (position.read === false) {\r\n                            let latestTime = position.update_time;\r\n                            if (\r\n                                notifications[\r\n                                    `notifyposition${position.id}`\r\n                                ] !== undefined\r\n                            ) {\r\n                                latestTime =\r\n                                    latestTime >\r\n                                    notifications[\r\n                                        `notifyposition${position.id}`\r\n                                    ].time\r\n                                        ? latestTime\r\n                                        : notifications[\r\n                                              `notifyposition${position.id}`\r\n                                          ].time;\r\n                            }\r\n                            notifications[`notifyposition${position.id}`] = {\r\n                                title: `New applications for: ${position.position_title} !!`,\r\n                                id: `notifyposition${position.id}`,\r\n                                link: `${LinkConstants.singleJobPosition}/${position.id}`,\r\n                                time: latestTime,\r\n                                content: `${position.description}`,\r\n                                sender: `${position.company}`,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let loadedApplications = response.data.applications;\r\n                // this will be array of the positions releadsed/created (the type depends on the userr tpy)\r\n                // let loadedApplications = [\r\n                //     {\r\n                //         id: 1,\r\n                //         position_id: 2,\r\n                //         company: \"Samsung\",\r\n                //         status: 1,\r\n                //         dept: \"CS\",\r\n                //         degree: \"MT\",\r\n                //         cgpa: 9.22,\r\n                //         time: 789654234,\r\n                //         update_time: 942456321,\r\n                //         read: true,\r\n                //     },\r\n                //     {\r\n                //         id: 2,\r\n                //         position_id: 3,\r\n                //         company: \"Ola\",\r\n                //         status: 2,\r\n                //         dept: \"CS\",\r\n                //         degree: \"MT\",\r\n                //         cgpa: 9.22,\r\n                //         time: 789654234,\r\n                //         update_time: 942456321,\r\n                //         read: false,\r\n                //     },\r\n                // ];\r\n\r\n                for (let application of loadedApplications) {\r\n                    applications[`${application.id}`] = application;\r\n\r\n                    if (current_u_type === \"student\") {\r\n                        if (application.read === false) {\r\n                            let title;\r\n                            if (application.status === 1) {\r\n                                title =\r\n                                    \"Your application is accepted for \" +\r\n                                    positions[`${application.position_id}`]\r\n                                        .position_title +\r\n                                    \" !!\";\r\n                            } else if (application.status === 2) {\r\n                                title =\r\n                                    \"Your application is rejected for \" +\r\n                                    positions[`${application.position_id}`]\r\n                                        .position_title +\r\n                                    \" !!\";\r\n                            }\r\n                            notifications[\r\n                                `notifyapplication${application.id}`\r\n                            ] = {\r\n                                title: title,\r\n                                id: `notifyapplication${application.id}`,\r\n                                link: `${LinkConstants.singleApplication}/${application.id}`,\r\n                                time: application.update_time,\r\n                                content: ``,\r\n                                sender: `${application.company}`,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.LOAD_INFORMATION,\r\n                    payload: {\r\n                        messages: messages,\r\n                        notices: notices,\r\n                        notifications: notifications,\r\n                        positions: positions,\r\n                        unreleasedpositions: unreleasedpositions,\r\n                        applications: applications,\r\n                    },\r\n                });\r\n                setTimeout(() => {\r\n                    if (\r\n                        JSON.parse(localStorage.getItem(\"authToken\")) !==\r\n                            undefined &&\r\n                        JSON.parse(localStorage.getItem(\"authToken\")) !== null\r\n                    ) {\r\n                        dispatch(getData());\r\n                    }\r\n                }, 1000 * 5);\r\n            })\r\n            .catch((error) => {});\r\n    };\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport { getData } from \"./getData\";\r\n\r\nexport const autoLogin = () => {\r\n    if (JSON.parse(localStorage.getItem(\"authToken\")) !== undefined) {\r\n        return (dispatch) => {\r\n            dispatch({ type: actionTypes.AUTH_START });\r\n\r\n            let axiosOptions = {\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_DATABASE_URI}/getuserdetails`,\r\n                data: {\r\n                    auth_token: JSON.parse(localStorage.getItem(\"authToken\")),\r\n                },\r\n            };\r\n\r\n            axios(axiosOptions)\r\n                .then((response) => {\r\n                    dispatch({\r\n                        type: actionTypes.AUTH_LOGIN,\r\n                        payload: {\r\n                            userId: response.data.user_id,\r\n                            username: response.data.name,\r\n                            userEmail: response.data.email,\r\n                            userType: response.data.usertype,\r\n                            profile: response.data.profile,\r\n                            authToken: JSON.parse(\r\n                                localStorage.getItem(\"authToken\")\r\n                            ),\r\n                            message: \"\",\r\n                        },\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    let message = null;\r\n                    try {\r\n                        message = error.response.data.message;\r\n                    } catch {\r\n                        message = \"\";\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: actionTypes.AUTH_FAIL,\r\n                        payload: {\r\n                            message: message,\r\n                        },\r\n                    });\r\n                });\r\n        };\r\n    }\r\n};\r\n\r\nexport const setAuthError = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.AUTH_FAIL,\r\n            payload: {\r\n                message: message,\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport const login = (username, password) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: actionTypes.AUTH_START });\r\n\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/login`,\r\n            data: {\r\n                username: username,\r\n                password: password,\r\n            },\r\n            // headers: {\r\n            //     authorization: `Basic ${JSON.parse(\r\n            //         localStorage.getItem(\"authToken\")\r\n            //     )}`,\r\n            // },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.AUTH_LOGIN,\r\n                    payload: {\r\n                        userId: response.data.user_id,\r\n                        username: response.data.username,\r\n                        userEmail: response.data.email,\r\n                        userType: response.data.user_type,\r\n                        authToken: response.data.auth_token,\r\n                        profile: response.data.profile,\r\n                        message: \"Succesfully logged in into account.\",\r\n                    },\r\n                });\r\n                dispatch(getData());\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Sorry, some error occured, Please Try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.AUTH_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const register = (username, password, email, type, genuineId = \"\") => {\r\n    return (dispatch) => {\r\n        dispatch({ type: actionTypes.AUTH_START });\r\n\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/register`,\r\n            data: {\r\n                username: username,\r\n                password: password,\r\n                email: email,\r\n                usertype: type,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        if (type === \"recruiter\") {\r\n            axiosOptions.data[\"gen_id\"] = genuineId;\r\n        }\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.AUTH_REGISTER,\r\n                    payload: {\r\n                        message: \"Succesfully registered! Login to continue.\",\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Sorry, some error occured, Please Try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.AUTH_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/logout`,\r\n            data: {},\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) =>\r\n                dispatch({\r\n                    type: actionTypes.AUTH_LOGOUT,\r\n                    payload: {\r\n                        message: \"\",\r\n                    },\r\n                })\r\n            )\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Sorry, some error occured, Please Try again.\";\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateprofile = (\r\n    dept,\r\n    roll_num,\r\n    cgpa,\r\n    degree,\r\n    resume_link,\r\n    description,\r\n    year\r\n) => {\r\n    return (dispatch) => {\r\n\r\n        let axiosOptions = {\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_DATABASE_URI}/updateprofile`,\r\n            data: {\r\n                dept: dept,\r\n                roll_num: roll_num,\r\n                cgpa: cgpa,\r\n                degree: degree,\r\n                resume_link: resume_link,\r\n                description: description,\r\n                year: year,\r\n            },\r\n            headers: {\r\n                authorization: `Basic ${JSON.parse(\r\n                    localStorage.getItem(\"authToken\")\r\n                )}`,\r\n            },\r\n        };\r\n\r\n        axios(axiosOptions)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_PROFILE,\r\n                    payload: {\r\n                        message: \"Succesfully updated! Login to continue.\",\r\n                        profile: {\r\n                            dept: dept,\r\n                            roll_num: roll_num,\r\n                            cgpa: cgpa,\r\n                            degree: degree,\r\n                            resume_link: resume_link,\r\n                            description: description,\r\n                            year: year,\r\n                        },\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let message = null;\r\n                try {\r\n                    message = error.response.data.message;\r\n                } catch {\r\n                    message = \"Sorry, some error occured, Please Try again.\";\r\n                }\r\n\r\n                dispatch({\r\n                    type: actionTypes.NORMAL_FAIL,\r\n                    payload: {\r\n                        message: message,\r\n                    },\r\n                });\r\n            });\r\n    };\r\n};","const wrap = (props) => {\r\n    return props.children;\r\n};\r\n\r\nexport default wrap;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./UserBlock.module.css\";\r\n\r\nconst userBlock = (props) => {\r\n    return (\r\n        <div className={classes.userBlock}>\r\n            <div className={classes.profile_pic}></div>\r\n            <div className={classes.user_data}>\r\n                <div className={classes.username}>{props.username}</div>\r\n\r\n                <div className={classes.links}>\r\n                    <Link to=\"/my_profile\">My Profile</Link>\r\n                    <Link to=\"/logout\">Logout</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.userId,\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(userBlock);\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./AuthBlock.module.css\";\r\n\r\nconst authBlock = (props) => {\r\n    return (\r\n        <div className={classes.loginBlock}>\r\n            <NavLink to=\"/login\" activeClassName={classes.activeLink}>\r\n                Login\r\n            </NavLink>\r\n            <NavLink to=\"/register\" activeClassName={classes.activeLink}>\r\n                Register\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\nexport default authBlock;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actionCreators from \"../../../../store/actions/actionCreators\";\r\nimport classes from \"./SearchBar.module.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        searched: false,\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={classes.searchBar}>\r\n                @\r\n                <input\r\n                    type=\"text\"\r\n                    className={classes.searchInput}\r\n                    placeholder=\"Username\"\r\n                    value={this.state.username}\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            username: e.target.value,\r\n                        });\r\n                    }}\r\n                />\r\n                <button\r\n                    className={classes.searchBtn}\r\n                    onClick={() => {\r\n                        if (this.state.username !== \"\") {\r\n                            this.props.searchUsers(this.state.username);\r\n                        }\r\n                        this.setState({ ...this.state, searched: true });\r\n                    }}\r\n                >\r\n                    <Link to=\"/searchedusers\" className={classes.blockLink}>Go</Link>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchUsers: (string) =>\r\n            dispatch(actionCreators.fetchUserNames(string)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./Toolbar.module.css\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\nimport Wrap from \"../../../hoc/Wrap/Wrap\";\r\n\r\nimport UserBlock from \"./UserBlock/UserBlock\";\r\nimport AuthBlock from \"./AuthBlock/AuthBlock\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <Wrap>\r\n            <div className={classes.toolbar}>\r\n                <div className={classes.logo}>PlaceMentor</div>\r\n                {props.userId !== null ? (\r\n                    <Wrap>\r\n                        <div className={classes.searchBar}>\r\n                            <SearchBar />\r\n                        </div>\r\n                        <div className={classes.userBlock}>\r\n                            <UserBlock />\r\n                        </div>\r\n                    </Wrap>\r\n                ) : (\r\n                    <div className={classes.authBlock}>\r\n                        <AuthBlock />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.userId,\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(toolbar);\r\n","import Wrap from \"../../../hoc/Wrap/Wrap\";\r\nimport classes from \"./Footer.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst footer = () => {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    return (\r\n        <Wrap>\r\n            <div id=\"footer\" className={classes[\"footer\"]}>\r\n                <div className={[classes[\"fpt\"], classes[\"fpt2\"]].join(\" \")}>\r\n                    <h2>Quick Links</h2>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/#\">Link 1</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Link 2</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Link 3</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Link 4</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={[classes[\"fpt\"], classes[\"fpt3\"]].join(\" \")}>\r\n                    <h2>Get to Know Us</h2>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/#\">About Us</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Privacy Policy</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Copy Rights</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/#\">Terms &amp; Conditions</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={[classes[\"fpt\"], classes[\"fpt4\"]].join(\" \")}>\r\n                    <h2>Contact Us</h2>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/#\">Developer forum</Link>\r\n                        </li>\r\n                        <li>\r\n                            Liked us ?{\" \"}\r\n                            <a href=\"https://github.com/ExpressHermes/Blog-API\">\r\n                                Contribute\r\n                            </a>\r\n                        </li>\r\n                        <li>Follow us on</li>\r\n                    </ul>\r\n\r\n                    <div>\r\n                        <div className={classes[\"logoholdersm\"]}>\r\n                            <a href=\"https://www.facebook.com/\">\r\n                                <img\r\n                                    className={classes[\"logo\"]}\r\n                                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR60ksM1WEReXYvX91YFNooAqIUnuUYi7XI5g&usqp=CAU\"\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                        <div className={classes[\"logoholdersm\"]}>\r\n                            <a href=\"https://www.instagram.com/\">\r\n                                <img\r\n                                    className={classes[\"logo\"]}\r\n                                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png\"\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                        <div className={classes[\"logoholdersm\"]}>\r\n                            <a href=\"https://www.github.com\">\r\n                                <img\r\n                                    className={classes[\"logo\"]}\r\n                                    src=\"https://cdn3.iconfinder.com/data/icons/inficons/512/github.png\"\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                        <div className={classes[\"logoholdersm\"]}>\r\n                            <a href=\"https://twitter.com/\">\r\n                                <img\r\n                                    className={classes[\"logo\"]}\r\n                                    src=\"https://e7.pngegg.com/pngimages/708/311/png-clipart-twitter-twitter-thumbnail.png\"\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes[\"copyRights\"]}>\r\n                &copy; CodeNatives {year}\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\n\r\nimport Wrap from \"../../../hoc/Wrap/Wrap\";\r\nimport Toolbar from \"../Toolbar/Toolbar\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nimport classes from \"./Content.module.css\";\r\n\r\nconst content = (props) => {\r\n    return (\r\n        <Wrap>\r\n            <Toolbar />\r\n            <div className={classes.ContentDiv}>{props.children}</div>\r\n            <Footer />\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nexport default content;\r\n","const dateFromStamp = (timestamp) => {\r\n    if (timestamp === null) return \"\";\r\n    let d = new Date(timestamp * 1000);\r\n    return d.toDateString();\r\n};\r\n\r\nexport default dateFromStamp;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Notification.module.css\";\r\n\r\nconst notification = (props) => {\r\n    return (\r\n        <div\r\n            className={[\r\n                classes.notification,\r\n                props.special ? classes.special : \"\",\r\n            ].join(\" \")}\r\n        >\r\n            <div className={classes.header}>\r\n                <div className={classes.title}>{props.title}</div>\r\n                <div className={classes.time}>{props.time}</div>\r\n            </div>\r\n            <div className={classes.sender}>{props.sender}</div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default notification;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dateFromStamp from \"../../DateFromStamp\";\r\n\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nimport classes from \"./NotificationsBar.module.css\";\r\n\r\nconst notificationsBar = (props) => {\r\n    let notifications = [];\r\n    let notification_objs = [];\r\n\r\n    for (let notificationKey in props.notifications) {\r\n        notification_objs.push(props.notifications[notificationKey]);\r\n    }\r\n\r\n    notification_objs = notification_objs.sort((a, b) => {\r\n        return a.time < b.time ? 1 : -1;\r\n    });\r\n\r\n    for (let notification of notification_objs) {\r\n        notifications.push(\r\n            <Link\r\n                to={notification.link}\r\n                key={notification.id}\r\n                className={classes.blockLink}\r\n                id={notification.id}\r\n            >\r\n                <Notification\r\n                    title={notification.title}\r\n                    time={dateFromStamp(notification.time)}\r\n                    key={notification.id}\r\n                    message={notification.content}\r\n                    sender={notification.sender}\r\n                />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    if (notifications.length === 0) {\r\n        notifications = \"No new notifications. Sit back and Relax.\";\r\n    }\r\n\r\n    return (\r\n        <div className={classes.NotificationsBar}>\r\n            <h1 className={classes.header}>Notifications</h1>\r\n            <div className={classes.list}>\r\n                <div className={classes.emptyMsg}>{notifications}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notifications: state.notifications,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return{\r\n\r\n//     }\r\n// }\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n    // , mapsDispatchToProps\r\n)(notificationsBar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Wrap from \"../../../hoc/Wrap/Wrap\";\r\n\r\nimport classes from \"./Navigation.module.css\";\r\n\r\nconst navigation = (props) => {\r\n    let Links = \"No proper stake holder type.\";\r\n    switch (props.usertype) {\r\n        case \"student\":\r\n            Links = (\r\n                <Wrap>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/instiboard\"\r\n                    >\r\n                        InstiBoard\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/myapplications\"\r\n                        exact\r\n                    >\r\n                        My Applications\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/messages\"\r\n                        exact\r\n                    >\r\n                        Messages\r\n                    </NavLink>\r\n                </Wrap>\r\n            );\r\n            break;\r\n        case \"alumni\":\r\n            Links = (\r\n                <Wrap>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/instiboard\"\r\n                    >\r\n                        InstiBoard\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/messages\"\r\n                        exact\r\n                    >\r\n                        Messages\r\n                    </NavLink>\r\n                </Wrap>\r\n            );\r\n            break;\r\n        case \"instiadmin\":\r\n            Links = (\r\n                <Wrap>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/instiboard\"\r\n                    >\r\n                        InstiBoard\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/recruiters\"\r\n                    >\r\n                        Recruiters\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/messages\"\r\n                        exact\r\n                    >\r\n                        Messages\r\n                    </NavLink>\r\n                </Wrap>\r\n            );\r\n            break;\r\n        case \"recruiter\":\r\n            Links = (\r\n                <Wrap>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/jobprofiles\"\r\n                        exact\r\n                    >\r\n                        Job Profiles\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className={classes.navigationLink}\r\n                        activeClassName={classes.activeLink}\r\n                        to=\"/messages\"\r\n                        exact\r\n                    >\r\n                        Messages\r\n                    </NavLink>\r\n                </Wrap>\r\n            );\r\n            break;\r\n        default:\r\n            Links = <Redirect from=\"/\" to=\"/login\" />;\r\n    }\r\n    return (\r\n        <Wrap>\r\n            <div className={classes.navBar}>{Links}</div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usertype: state.userType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(navigation);\r\n","import React from \"react\";\r\nimport NotificationsBar from \"../../NotificationsBar/NotificationsBar\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nimport classes from \"./MainFrame.module.css\";\r\n\r\nconst mainFrame = (props) => {\r\n    return (\r\n        <div className={classes.MainFrame}>\r\n            <div className={classes.leftSide}>\r\n                <NotificationsBar />\r\n            </div>\r\n            <div className={classes.rightSide}>\r\n                <Navigation />\r\n                <div className={classes.content}>{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mainFrame;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators.js\";\r\nimport classes from \"./MessageBox.module.css\";\r\nimport MainFrame from \"../../Components/UI/MainFrame/MainFrame\";\r\nimport dateFromStamp from \"../../DateFromStamp.js\";\r\n\r\nclass MessageBox extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        content: \"\",\r\n        unreadMessages: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"MessageBox | PlaceMentor\";\r\n    }\r\n\r\n    markAsRead = () => {\r\n        for (let i of this.state.unreadMessages) {\r\n            this.props.markAsRead(\"message\", i);\r\n        }\r\n    };\r\n\r\n    pushUnreadMessages = (userMsgsSet, unreadMessages) => {\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     unreadMessages: {\r\n        //         ...this.state.unreadMessages,\r\n        //         [userMsgsSet]: unreadMessages,\r\n        //     },\r\n        // });\r\n    };\r\n\r\n    render() {\r\n        let userSets = [];\r\n        let read = true;\r\n        let unreadMessages = [];\r\n        for (let userMsgsSet in this.props.messages) {\r\n            let userMessages = [];\r\n            for (let userMsg in this.props.messages[userMsgsSet]) {\r\n                let userMsg_ = this.props.messages[userMsgsSet][userMsg];\r\n                read = read && userMsg_.read;\r\n                if (!userMsg_.read) {\r\n                    this.props.markAsRead(\"message\", userMsg_.id);\r\n                    this.props.removeMessageNotification(userMsgsSet);\r\n                }\r\n                userMessages.unshift(\r\n                    <div\r\n                        key={`${userMsg_.id}`}\r\n                        className={[\r\n                            classes.noticeBox,\r\n                            userMsg_.author === this.props.username\r\n                                ? classes.is_sent\r\n                                : classes.is_recieved,\r\n                        ].join(\" \")}\r\n                    >\r\n                        <div className={classes.insider}>\r\n                            <div className={classes.header}>\r\n                                <div className={classes.title}>\r\n                                    {userMsg_.author === this.props.username\r\n                                        ? \"You\"\r\n                                        : userMsg_.author}\r\n                                </div>\r\n                                <div className={classes.time}>\r\n                                    {dateFromStamp(userMsg_.time)}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.message}>\r\n                                {userMsg_.content}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            userSets.push(\r\n                <div key={userMsgsSet} className={classes.msgBlocks}>\r\n                    <div className={classes.username}>{userMsgsSet}</div>\r\n                    {userMessages}\r\n                </div>\r\n            );\r\n            this.pushUnreadMessages(userMsgsSet, unreadMessages);\r\n            // this.state.unreadMessages;\r\n        }\r\n\r\n        return (\r\n            <MainFrame>\r\n                <h2>Message Box</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            username: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.username}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Username\"\r\n                />\r\n                <textarea\r\n                    name=\"content\"\r\n                    name=\"\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            content: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.content}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Message Content\"\r\n                ></textarea>\r\n                <button\r\n                    onClick={() => {\r\n                        this.props.writeMessage(\r\n                            this.state.username,\r\n                            this.state.content\r\n                        );\r\n                        this.setState({\r\n                            ...this.state,\r\n                            username: \"\",\r\n                            content: \"\",\r\n                        });\r\n                    }}\r\n                >\r\n                    Send\r\n                </button>\r\n                {userSets}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages,\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        writeMessage: (uname, content) => {\r\n            dispatch(actionCreators.createMessage(uname, content));\r\n        },\r\n        markAsRead: (type, id) => {\r\n            dispatch(actionCreators.markAsRead(type, id));\r\n        },\r\n        removeMessageNotification: (author) => {\r\n            dispatch(actionCreators.removeMessageNotification(author));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);\r\n","import React from \"react\";\r\nimport dateFromStamp from \"../../../DateFromStamp\";\r\n\r\nimport classes from \"./Notice.module.css\";\r\n\r\nconst notice = (props) => {\r\n    return (\r\n        <div\r\n            className={[\r\n                classes.noticeBox,\r\n                props.is_position ? classes.is_position : \"\",\r\n            ].join(\" \")}\r\n        >\r\n            <div className={classes.header}>\r\n                <div className={classes.title}>\r\n                    <div className={props.unread ? classes.unread : \"\"}></div>\r\n                    {props.is_position ? \"Position: \" : \"\"}\r\n                    {props.title}\r\n                </div>\r\n                <div className={classes.time}>{dateFromStamp( props.time)}</div>\r\n            </div>\r\n            <div className={classes.sender}>{props.sender}</div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default notice;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\n\r\nimport * as LinkConstants from \"../../LinkNames\";\r\n\r\nimport classes from \"./InstiBoard.module.css\";\r\nimport MainFrame from \"../../Components/UI/MainFrame/MainFrame\";\r\nimport Notice from \"./Notice/Notice\";\r\n\r\nclass InstiBoard extends React.Component {\r\n    componentDidMount() {\r\n        document.title = \"PlaceMentor | InstiBoard\";\r\n    }\r\n\r\n    render() {\r\n        let notices = [];\r\n        let notice_objs = [];\r\n        for (let notice_id in this.props.notices) {\r\n            this.props.notices[notice_id][\"is_position\"] = false;\r\n            notice_objs.push(this.props.notices[notice_id]);\r\n        }\r\n        for (let position_id in this.props.positions) {\r\n            \r\n            this.props.positions[position_id][\"is_position\"] = true;\r\n            this.props.positions[position_id][\"time\"] = this.props.positions[\r\n                position_id\r\n            ].release_time;\r\n            if (this.props.positions[position_id].release_time !== null)\r\n                notice_objs.push(this.props.positions[position_id]);\r\n        }\r\n\r\n        notice_objs = notice_objs.sort((a, b) => {\r\n            return a.time < b.time ? 1 : -1;\r\n        });\r\n        for (let notice of notice_objs) {\r\n            notices.push(\r\n                <Link\r\n                    key={(notice.is_position ? \"p\" : \"n\") + notice.id}\r\n                    to={\r\n                        notice.is_position\r\n                            ? `${LinkConstants.singleJobPosition}/${notice.id}`\r\n                            : `${LinkConstants.singleInstiBoardNotice}/${notice.id}`\r\n                    }\r\n                    className={classes.blockLinks}\r\n                >\r\n                    {!notice.is_position ? (\r\n                        <Notice\r\n                            title={notice.subject}\r\n                            time={notice.time}\r\n                            message={notice.content}\r\n                            sender={notice.author}\r\n                            unread={!notice.read}\r\n                            is_position={false}\r\n                        />\r\n                    ) : (\r\n                        <Notice\r\n                            title={notice.position_title}\r\n                            time={notice.time}\r\n                            message={notice.description}\r\n                            sender={notice.company}\r\n                            unread={!notice.read}\r\n                            is_position={true}\r\n                        />\r\n                    )}\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        let createNoticeLink = null;\r\n        if (this.props.userType === \"instiadmin\") {\r\n            createNoticeLink = (\r\n                <Link to=\"createNotice\" className={classes.createNotice}>\r\n                    Create Notice\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <MainFrame>\r\n                {createNoticeLink}\r\n                <h2>Institute Board</h2>\r\n                {notices}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notices: state.notices,\r\n        positions: state.positions,\r\n        userType: state.userType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getdata: () => dispatch(actionCreators.getData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstiBoard);\r\n","import React from \"react\";\r\nimport classes from \"./Application.module.css\";\r\n\r\nconst application = (props) => {\r\n    let classname = classes.pending;\r\n    let status = \"Pending\";\r\n\r\n    if (props.status == 2) {\r\n        classname = classes.rejected;\r\n        status = \"Rejected\";\r\n    } else if (props.status == 1) {\r\n        classname = classes.selected;\r\n        status = \"Selected\";\r\n    }\r\n\r\n    return (\r\n        <div className={[classes.application, classname].join(\" \")}>\r\n            <div className={classes.position}>\r\n                <div className={props.unread ? classes.unread : \"\"}></div>\r\n                {props.position_name}\r\n            </div>\r\n            <div className={classes.company}>{props.company_name}</div>\r\n            <div className={classes.time}>\r\n                Application date: {props.appl_time}\r\n            </div>\r\n            <div className={classes.time}>\r\n                Last Status date: {props.stat_time}\r\n            </div>\r\n            <div className={[classes.status].join(\" \")}>{status}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default application;\r\n","import classes from \"./MyApplications.module.css\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\nimport Application from \"./Application/Application\";\r\nimport dateFromStamp from \"../../DateFromStamp\";\r\nconst myApplications = (props) => {\r\n    let applications = props.applications;\r\n    let applications_list = [];\r\n    let applications_objs = [];\r\n    for (let applicationKey in applications) {\r\n        applications_list.push(applications[applicationKey]);\r\n    }\r\n\r\n    applications_list.sort((a, b) => {\r\n        if (a.update_time < b.update_time) {\r\n            return 1;\r\n        }\r\n        return -1;\r\n    });\r\n    for (let application of applications_list) {\r\n        applications_objs.push(\r\n            <Link\r\n                id={\"application\" + application.id}\r\n                to={`/application/${application.id}`}\r\n                key={application.id}\r\n                className={classes.blockLinks}\r\n            >\r\n                <Application\r\n                    position_name={props.positions[application.position_id].position_title}\r\n                    company_name={application.company}\r\n                    status={application.status}\r\n                    appl_time={dateFromStamp( application.time)}\r\n                    stat_time={dateFromStamp( application.update_time)}\r\n                    unread={!application.read}\r\n                />\r\n            </Link>\r\n        );\r\n    }\r\n    return (\r\n        <MainFrame>\r\n            <h2>My Applications</h2>\r\n            {applications_objs}\r\n        </MainFrame>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        applications: state.applications,\r\n        positions: state.positions,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(myApplications);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./JobProfiles.module.css\";\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\n\r\nimport * as LinkConstants from \"../../LinkNames\";\r\nimport Notice from \"../../Containers/InstiBoard/Notice/Notice\";\r\nclass JobProfiles extends React.Component {\r\n    render() {\r\n        let notices = [];\r\n        let notice_objs = [];\r\n        for (let position_id in this.props.positions) {\r\n            this.props.positions[position_id][\"is_position\"] = true;\r\n            this.props.positions[position_id][\"time\"] = this.props.positions[\r\n                position_id\r\n            ].release_time;\r\n            if (this.props.positions[position_id].release_time === null) {\r\n                this.props.positions[position_id][\r\n                    \"time\"\r\n                ] = this.props.positions[position_id].create_time;\r\n            }\r\n            notice_objs.push(this.props.positions[position_id]);\r\n        }\r\n\r\n        notice_objs = notice_objs.sort((a, b) => {\r\n            return a.time < b.time ? 1 : -1;\r\n        });\r\n        for (let notice of notice_objs) {\r\n            notices.push(\r\n                <Link\r\n                    key={(notice.is_position ? \"p\" : \"n\") + notice.id}\r\n                    to={\r\n                        notice.is_position\r\n                            ? `${LinkConstants.singleJobPosition}/${notice.id}`\r\n                            : `${LinkConstants.singleInstiBoardNotice}/${notice.id}`\r\n                    }\r\n                    className={classes.blockLinks}\r\n                >\r\n                    {!notice.is_position ? (\r\n                        <Notice\r\n                            title={notice.subject}\r\n                            time={notice.time}\r\n                            message={notice.content}\r\n                            sender={notice.author}\r\n                            unread={!notice.read}\r\n                            is_position={false}\r\n                        />\r\n                    ) : (\r\n                        <Notice\r\n                            title={\r\n                                notice.release_time === null\r\n                                    ? notice.position_title +\r\n                                      \" (Un-released by Institute admin)\"\r\n                                    : notice.position_title\r\n                            }\r\n                            time={notice.time}\r\n                            message={notice.description}\r\n                            sender={notice.company}\r\n                            unread={!notice.read}\r\n                            is_position={true}\r\n                        />\r\n                    )}\r\n                </Link>\r\n            );\r\n        }\r\n        return (\r\n            <MainFrame>\r\n                <h2>Job profiles released by you.</h2>\r\n                <Link to=\"/createPosition\" className={classes.createNotice}>\r\n                    Create Position\r\n                </Link>\r\n                {notices}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        positions: state.positions,\r\n        userType: state.userType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getdata: () => dispatch(actionCreators.getData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobProfiles);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport MainFrame from \"../../../Components/UI/MainFrame/MainFrame\";\r\n\r\nimport classes from \"./NoticeReader.module.css\";\r\nimport * as actions from \"../../../store/actions/actionCreators\";\r\n\r\nclass noticeReader extends React.Component {\r\n    componentDidMount() {\r\n        let noticeId = this.props.match.params.id;\r\n        let notice = this.props.notices[`${noticeId}`];\r\n\r\n        if (notice !== undefined) {\r\n            document.title = notice.title;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let notice = this.props.notices[`${this.props.match.params.id}`];\r\n        if (notice.read === false) {\r\n            this.props.markAsRead(notice.id);\r\n        }\r\n\r\n        if (notice === undefined) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return (\r\n            <MainFrame>\r\n                <div\r\n                    className={[\r\n                        classes.notice,\r\n                        this.props.special ? classes.special : \"\",\r\n                    ].join(\" \")}\r\n                >\r\n                    <div className={classes.header}>\r\n                        <div className={classes.title}>{notice.subject}</div>\r\n                        <div className={classes.time}>{notice.time}</div>\r\n                    </div>\r\n                    <div className={classes.sender}>{notice.author}</div>\r\n                    <div className={classes.message}>{notice.content}</div>\r\n                </div>\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notices: state.notices,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        markAsRead: (noticeId) =>\r\n            dispatch(actions.markAsRead(\"notice\", noticeId)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(noticeReader));\r\n","import React from \"react\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/actionCreators\";\r\n\r\nimport classes from \"./PositionDetails.module.css\";\r\nimport dateFromStamp from \"../../../DateFromStamp\";\r\n\r\nclass PositionDetails extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        let position = this.props.positions[`${this.props.id}`];\r\n\r\n        return (\r\n            <div className={classes.position}>\r\n                <div className={classes.header}>\r\n                    <div className={classes.position_title}>\r\n                        {position.position_title}\r\n                    </div>\r\n                    <div className={classes.company_name}>\r\n                        {position.company}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.description}>\r\n                    Description: {position.description}\r\n                </div>\r\n                <table className={classes.details}>\r\n                    <tr>\r\n                        <td>Dead Line for applications</td>\r\n                        <td>{dateFromStamp(position.deadline)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CTC</td>\r\n                        <td>{position.CTC}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Release Date</td>\r\n                        <td>{dateFromStamp(position.release_time)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Departments</td>\r\n                        <td>{position.depts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Degrees</td>\r\n                        <td>{position.degrees}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        positions: state.positions,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        markAsRead: (noticeId) =>\r\n            dispatch(actions.markAsRead(\"position\", noticeId)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PositionDetails));\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport MainFrame from \"../../Components/UI/MainFrame/MainFrame\";\r\n\r\nimport classes from \"./JobPosition.module.css\";\r\nimport PositionDetails from \"./PositionDetails/PositionDetails\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/actionCreators\";\r\nimport Wrap from \"../../hoc/Wrap/Wrap\";\r\nimport dateFromStamp from \"../../DateFromStamp\";\r\n\r\nclass JobPosition extends React.Component {\r\n    state = {\r\n        resumeUploadOwn: true,\r\n        resumeLink: null,\r\n        feedback: \"\",\r\n    };\r\n    componentDidMount() {\r\n        let positionId = this.props.match.params.id;\r\n        let position = this.props.positions[`${positionId}`];\r\n\r\n        if (position !== undefined) {\r\n            document.title = position.position_title + \" | \" + position.company;\r\n            if (!position.read)\r\n                // document\r\n                //     .getElementById(\"notifyposition\" + position.id)\r\n                //     .remove();\r\n                this.props.markAsRead(position.id);\r\n            this.props.getPosition(position.id);\r\n        }\r\n    }\r\n\r\n    // let classname = classes.pending;\r\n    // let status = \"Pending\";\r\n\r\n    // if (props.status == 1) {\r\n    //     classname = classes.rejected;\r\n    //     status = \"Rejected\";\r\n    // } else if (props.status == 2) {\r\n    //     classname = classes.selected;\r\n    //     status = \"Selected\";\r\n    // }\r\n    render() {\r\n        let position = this.props.positions[`${this.props.match.params.id}`];\r\n        let profile = this.props.profile;\r\n        let features = null;\r\n        let applications = [];\r\n        let feedbacks = [];\r\n        let hasApplied = false;\r\n        let application = null;\r\n        for (let applicationKey in this.props.applications) {\r\n            if (\r\n                this.props.applications[applicationKey].position_id ===\r\n                position.id\r\n            ) {\r\n                application = this.props.applications[applicationKey];\r\n                hasApplied = true;\r\n            }\r\n        }\r\n\r\n        if (this.props.userType === \"student\") {\r\n            if (profile.dept === undefined || profile.degree === undefined) {\r\n                features =\r\n                    \"Please set Degree and Dept in the profile to apply to the position\";\r\n            } else {\r\n                if (\r\n                    !position.depts.includes(profile.dept) ||\r\n                    !position.degrees.includes(profile.degree)\r\n                ) {\r\n                    features = (\r\n                        <button\r\n                            className={[classes.options, classes.notable].join(\r\n                                \" \"\r\n                            )}\r\n                            disabled\r\n                        >\r\n                            Degree and Department Not Matched to Apply\r\n                        </button>\r\n                    );\r\n                } else if (\r\n                    Date.now() / 1000 > position.deadline &&\r\n                    !hasApplied\r\n                ) {\r\n                    features = (\r\n                        <button\r\n                            className={[classes.options, classes.notable].join(\r\n                                \" \"\r\n                            )}\r\n                            disabled\r\n                        >\r\n                            Deadline passed\r\n                        </button>\r\n                    );\r\n                } else if (!hasApplied) {\r\n                    features = (\r\n                        <Wrap>\r\n                            <div className={classes.upload_file}>\r\n                                <div className={classes.toggleFile}>\r\n                                    <input\r\n                                        id=\"checkbox_resume\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) =>\r\n                                            this.setState((prevstate) => {\r\n                                                return {\r\n                                                    ...this.state,\r\n                                                    resumeUploadOwn: !prevstate.resumeUploadOwn,\r\n                                                };\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <label for=\"checkbox_resume\">\r\n                                        Use the same resume from my profile\r\n                                    </label>\r\n                                </div>\r\n                                {this.state.resumeUploadOwn ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"resume_file\"\r\n                                        placeholder=\"Resume Link\"\r\n                                        className={classes.File}\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                ...this.state,\r\n                                                resumeLink: e.target.value,\r\n                                            });\r\n                                        }}\r\n                                        value={this.state.resumeLink}\r\n                                    />\r\n                                ) : this.props.profile.resume_link !==\r\n                                  undefined ? (\r\n                                    \"Uploaded Resume Link : \" +\r\n                                    this.props.profile.resume_link\r\n                                ) : (\r\n                                    \"No Resume Uploaded to profile\"\r\n                                )}\r\n                            </div>\r\n                            <button\r\n                                className={[classes.options, classes.able].join(\r\n                                    \" \"\r\n                                )}\r\n                                onClick={() =>\r\n                                    this.props.applyToPosition(\r\n                                        position.id,\r\n                                        this.state.resumeUploadOwn\r\n                                            ? this.state.resumeLink\r\n                                            : this.props.profile.resume_link\r\n                                    )\r\n                                }\r\n                            >\r\n                                Apply to the Position\r\n                            </button>\r\n                        </Wrap>\r\n                    );\r\n                } else {\r\n                    let status = application.status;\r\n                    let statusBar = null;\r\n                    if (status === 1) {\r\n                        statusBar = (\r\n                            <button\r\n                                className={[classes.options, classes.able].join(\r\n                                    \" \"\r\n                                )}\r\n                            >\r\n                                Selected\r\n                            </button>\r\n                        );\r\n                    } else if (status === 2) {\r\n                        statusBar = (\r\n                            <button\r\n                                className={[\r\n                                    classes.options,\r\n                                    classes.notable,\r\n                                ].join(\" \")}\r\n                                disabled\r\n                            >\r\n                                Rejected\r\n                            </button>\r\n                        );\r\n                    } else {\r\n                        statusBar = (\r\n                            <button\r\n                                className={[classes.options, classes.done].join(\r\n                                    \" \"\r\n                                )}\r\n                                disabled\r\n                            >\r\n                                Pending\r\n                            </button>\r\n                        );\r\n                    }\r\n                    features = (\r\n                        <Wrap>\r\n                            {statusBar}\r\n                            <button\r\n                                className={[classes.options, classes.done].join(\r\n                                    \" \"\r\n                                )}\r\n                            >\r\n                                <Link to={\"/application/\" + application.id}>\r\n                                    View Application\r\n                                </Link>\r\n                            </button>\r\n                        </Wrap>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        if (this.props.userType === \"instiadmin\") {\r\n            if (position.release_time === null) {\r\n                features = (\r\n                    <button\r\n                        className={[classes.options, classes.able].join(\" \")}\r\n                        onClick={() => this.props.releasePosition(position.id)}\r\n                    >\r\n                        Release to InstiBoard\r\n                    </button>\r\n                );\r\n            } else {\r\n                features = (\r\n                    <button\r\n                        className={[classes.options, classes.done].join(\" \")}\r\n                        disabled\r\n                    >\r\n                        Released to InsitBoard\r\n                    </button>\r\n                );\r\n            }\r\n        }\r\n        if (this.props.userType === \"recruiter\") {\r\n            let currApplications = this.props.currentPosApplications.sort(\r\n                (a, b) => {\r\n                    if (a.status > b.status) {\r\n                        return 1;\r\n                    }\r\n                    return -1;\r\n                }\r\n            );\r\n            for (let currapplcnid in currApplications) {\r\n                let currapplcn = currApplications[currapplcnid];\r\n                let statusText = \"pending\";\r\n                if (currapplcn.status === 1) {\r\n                    statusText = \"selected\";\r\n                } else if (currapplcn.status === 2) {\r\n                    statusText = \"rejected\";\r\n                }\r\n                applications.push(\r\n                    <Link\r\n                        className={classes.BlockLink}\r\n                        to={\"/application/\" + currapplcn.id}\r\n                        exact\r\n                    >\r\n                        <div\r\n                            className={[\r\n                                classes.application,\r\n                                classes[statusText],\r\n                            ].join(\" \")}\r\n                        >\r\n                            <div className={classes.applicant}>\r\n                                {/* {props.applicant_name} */}\r\n                                {currapplcn.candidateName}\r\n                            </div>\r\n                            <div className={classes.dept}>\r\n                                {currapplcn.dept +\r\n                                    \" \" +\r\n                                    currapplcn.degree +\r\n                                    \" \" +\r\n                                    currapplcn.cgpa}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    classes.status,\r\n                                    classes[\"statusText\"],\r\n                                ].join(\" \")}\r\n                            >\r\n                                {statusText}\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                );\r\n            }\r\n        }\r\n        if (\r\n            this.props.userType === \"student\" ||\r\n            this.props.userType === \"alumni\"\r\n        ) {\r\n            let currfeedbacks = this.props.currentPosFeedbacks.sort((a, b) => {\r\n                if (a.time < b.time) {\r\n                    return 1;\r\n                }\r\n                return -1;\r\n            });\r\n            for (let currfeedback of currfeedbacks) {\r\n                feedbacks.push(\r\n                    <div className={classes.application}>\r\n                        <div className={classes.applicant}>\r\n                            {/* {props.applicant_name} */}\r\n                            {currfeedback.authorName}\r\n                        </div>\r\n                        <div className={classes.dept}>\r\n                            {dateFromStamp(currfeedback.time)}\r\n                        </div>\r\n                        <div>{currfeedback.content}</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        if (this.props.userType === \"alumni\") {\r\n            features = (\r\n                <Wrap>\r\n                    <textarea\r\n                        placeholder=\"Enter your Feedback\"\r\n                        value={this.state.feedback}\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                feedback: e.target.value,\r\n                            });\r\n                        }}\r\n                        className={classes.contentInput}\r\n                    ></textarea>\r\n                    <button\r\n                        onClick={() =>\r\n                            this.props.submitFeedback(\r\n                                position.id,\r\n                                this.state.feedback\r\n                            )\r\n                        }\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </Wrap>\r\n            );\r\n        }\r\n        return (\r\n            <MainFrame>\r\n                <PositionDetails id={position.id} />\r\n\r\n                <div className={classes.features}>{features}</div>\r\n\r\n                <div className={classes.applications}>{applications}</div>\r\n\r\n                <div className={classes.applications}>{feedbacks}</div>\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userType: state.userType,\r\n        positions: state.positions,\r\n        profile: state.userProfile,\r\n        applications: state.applications,\r\n        currentPosApplications: state.currentPosApplications,\r\n        currentPosFeedbacks: state.currentPosFeedbacks,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        markAsRead: (noticeId) =>\r\n            dispatch(actions.markAsRead(\"position\", noticeId)),\r\n        applyToPosition: (positionId, resumeLink) =>\r\n            dispatch(actions.applyToPosition(positionId, resumeLink)),\r\n        releasePosition: (positionId) =>\r\n            dispatch(actions.releasePosition(positionId)),\r\n        getPosition: (positionId) => dispatch(actions.getPosition(positionId)),\r\n        submitFeedback: (positionId, feedback) =>\r\n            dispatch(actions.writeFeedback(positionId, feedback)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(JobPosition));\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions/actionCreators\";\r\n\r\nimport classes from \"./ViewApplication.module.css\";\r\nimport \"./ViewApplication.css\";\r\n\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\nimport PositionDetails from \"../../Containers/JobPosition/PositionDetails/PositionDetails\";\r\nimport Wrap from \"../../hoc/Wrap/Wrap\";\r\n\r\nclass ViewApplication extends React.Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        document.title = \"Application\";\r\n        this.props.applicationDetails(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        let application = this.props.currentApplication;\r\n        let buttons = null;\r\n        let profileDetails = null;\r\n        if (application !== null) {\r\n            if (application.read === false) {\r\n                this.props.markAsRead(application.id);\r\n            }\r\n            profileDetails = (\r\n                <Wrap>\r\n                    <PositionDetails id={application.position_id} />\r\n                    <div>\r\n                        Link Resume :{\" \"}\r\n                        <a href={application.resume_link}>\r\n                            {application.resume_link}\r\n                        </a>\r\n                    </div>\r\n                </Wrap>\r\n            );\r\n\r\n            if (application.status === 0) {\r\n                if (this.props.userType === \"recruiter\") {\r\n                    buttons = (\r\n                        <Wrap>\r\n                            <button\r\n                                className={[classes.options, classes.able].join(\r\n                                    \" \"\r\n                                )}\r\n                                onClick={() => {\r\n                                    this.props.selectApplication(\r\n                                        application.id,\r\n                                        1\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Accept\r\n                            </button>\r\n                            <button\r\n                                className={[\r\n                                    classes.options,\r\n                                    classes.notable,\r\n                                ].join(\" \")}\r\n                                onClick={() => {\r\n                                    this.props.selectApplication(\r\n                                        application.id,\r\n                                        2\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Reject\r\n                            </button>\r\n                        </Wrap>\r\n                    );\r\n                } else {\r\n                    buttons = (\r\n                        <button\r\n                            className={[classes.options, classes.done].join(\r\n                                \" \"\r\n                            )}\r\n                            disabled\r\n                        >\r\n                            Pending\r\n                        </button>\r\n                    );\r\n                }\r\n            } else if (application.status === 1) {\r\n                buttons = (\r\n                    <button\r\n                        className={[classes.options, classes.able].join(\" \")}\r\n                        disabled\r\n                    >\r\n                        Selected\r\n                    </button>\r\n                );\r\n            } else if (application.status === 2) {\r\n                buttons = (\r\n                    <button\r\n                        className={[classes.options, classes.notable].join(\" \")}\r\n                        disabled\r\n                    >\r\n                        Rejected\r\n                    </button>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <MainFrame>\r\n                {profileDetails}\r\n                {buttons}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userType: state.userType,\r\n        currentApplication: state.current_application,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        applicationDetails: (positionId) =>\r\n            dispatch(actions.applicationDetails(positionId)),\r\n        selectApplication: (applId, newStatus) =>\r\n            dispatch(actions.selectApplication(applId, newStatus)),\r\n        markAsRead: (noticeId) =>\r\n            dispatch(actions.markAsRead(\"application\", noticeId)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(ViewApplication));\r\n","import React from \"react\";\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport classes from \"./UserProfile.module.css\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserProfile extends React.Component {\r\n    componentDidMount() {\r\n        document.title =\r\n            this.props.match.params.username + \" | \" + \" User Profile\";\r\n        this.props.getProfile(this.props.match.params.username);\r\n    }\r\n    render() {\r\n        if (this.props.match.params.username === this.props.username) {\r\n            return <Redirect to=\"/my_profile\" />;\r\n        }\r\n        if (\r\n            this.props.searchedProfile === undefined ||\r\n            this.props.searchedProfile === null\r\n        ) {\r\n            return <MainFrame>You are not allowed to see this profile</MainFrame>\r\n        }\r\n        return (\r\n            <MainFrame>\r\n                {this.props.searchedProfile.usertype === \"Student\" ? (\r\n                    <div className={classes.userProfile}>\r\n                        <div className={classes.pic}></div>\r\n                        <div className={classes.username}>\r\n                            {this.props.searchedProfile.username}\r\n                        </div>\r\n                        <div className={classes.username}>\r\n                            {this.props.searchedProfile.usertype}\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Email:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>CGPA:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.cgpa}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Degree:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.degree}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Roll Number: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.roll_num}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Description: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Department: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.dept}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Resume Link: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.resume_link}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : this.props.searchedProfile.usertype === \"Alumni\" ? (\r\n                    <div className={classes.userProfile}>\r\n                        <div className={classes.pic}></div>\r\n                        <div className={classes.username}>\r\n                            {this.props.searchedProfile.username}\r\n                        </div>\r\n                        <div className={classes.username}>\r\n                            {this.props.searchedProfile.usertype}\r\n                        </div>\r\n\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Email:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Degree:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.degree}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Description: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Department: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.searchedProfile.dept}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchedProfile: state.searchedProfile,\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getProfile: (string) => dispatch(actionCreators.getProfile(string)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(UserProfile));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport * as actionCreators from \"../../../store/actions/actionCreators\";\r\n\r\nimport classes from \"./Login.module.css\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        isValid: true,\r\n        username: \"\",\r\n        password: \"\",\r\n        errors: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"PlaceMentor | Login into account\";\r\n        this.props.setAuthError(\"\");\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        let errors = {};\r\n        let isValid = true;\r\n\r\n        this.props.setAuthError(\"\");\r\n\r\n        if (this.state.username === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"username\"] = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if (this.state.password === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"password\"] = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if (isValid) this.props.login(this.state.username, this.state.password);\r\n\r\n        this.setState({ ...this.state, errors: errors, isValid: isValid });\r\n    };\r\n\r\n    onChangeValue = (key, value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.userId !== null) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div className={classes.loginContainer}>\r\n                <div className={classes.loginForm}>\r\n                    <div className={classes.header}>Login into PlaceMentor</div>\r\n\r\n                    <div className={classes.inputForm}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\"username\", e.target.value)\r\n                            }\r\n                            value={this.state.username}\r\n                            className={\r\n                                \"username\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\"password\", e.target.value)\r\n                            }\r\n                            value={this.state.password}\r\n                            className={\r\n                                \"password\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <p className={classes.errorMsg}>\r\n                            {this.props.errorMsg}\r\n                        </p>\r\n                        <button\r\n                            name=\"submit\"\r\n                            className={classes.submit}\r\n                            onClick={this.submitHandler}\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.userId,\r\n        errorMsg: state.authError,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (uname, pass) => dispatch(actionCreators.login(uname, pass)),\r\n        setAuthError: (message) =>\r\n            dispatch(actionCreators.setAuthError(message)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./UpdateProfile.module.css\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport MainFrame from \"../../Components/UI/MainFrame/MainFrame\";\r\n\r\nclass UpdateProfile extends React.Component {\r\n    state = {\r\n        isValid: false,\r\n        dept: this.props.profile.dept,\r\n        roll_num: this.props.profile.roll_num,\r\n        cgpa: this.props.profile.cgpa,\r\n        degree: this.props.profile.degree,\r\n        resume_link: this.props.profile.resume_link,\r\n        description: this.props.profile.description,\r\n        year: this.props.profile.year,\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.username + \" | \" + \" User Profile\";\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        let isValid = true;\r\n        if (isValid)\r\n            this.props.updateprofile(\r\n                this.state.dept,\r\n                this.state.roll_num,\r\n                this.state.cgpa,\r\n                this.state.degree,\r\n                this.state.resume_link,\r\n                this.state.description,\r\n                this.state.year\r\n            );\r\n    };\r\n\r\n    onChangeValue = (key, value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.profile === undefined) {\r\n            return <div>\"Happy path\"</div>;\r\n        }\r\n        return (\r\n            <MainFrame>\r\n                {this.props.usertype === \"student\" ? (\r\n                    <div className={classes.userProfile}>\r\n                        <div className={classes.pic}></div>\r\n                        <div className={classes.username}>\r\n                            {this.props.profile.username}\r\n                        </div>\r\n                        <div className={classes.username}>\r\n                            {this.props.usertype}\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Email:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>CGPA:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.cgpa}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Degree:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.degree}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Roll Number: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.roll_num}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Description: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Department: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.dept}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Resume Link: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.resume_link}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : this.props.usertype === \"alumni\" ? (\r\n                    <div className={classes.userProfile}>\r\n                        <div className={classes.pic}></div>\r\n                        <div className={classes.username}>\r\n                            {this.props.profile.username}\r\n                        </div>\r\n                        <div className={classes.username}>\r\n                            {this.props.usertype}\r\n                        </div>\r\n\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Email:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Degree:</div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.degree}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Description: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.content_container}>\r\n                            <div className={classes.head}>Department: </div>\r\n                            <div className={classes.content}>\r\n                                {this.props.profile.dept}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n                <div className={classes.regContainer}>\r\n                    <div className={classes.regForm}>\r\n                        <div className={classes.inputForm}>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"dept\"\r\n                                placeholder=\"Department\"\r\n                                onChange={(e) =>\r\n                                    this.onChangeValue(\"dept\", e.target.value)\r\n                                }\r\n                                value={this.state.dept}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"degree\"\r\n                                placeholder=\"Degree\"\r\n                                onChange={(e) =>\r\n                                    this.onChangeValue(\"degree\", e.target.value)\r\n                                }\r\n                                value={this.state.degree}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                placeholder=\"Description\"\r\n                                onChange={(e) =>\r\n                                    this.onChangeValue(\r\n                                        \"description\",\r\n                                        e.target.value\r\n                                    )\r\n                                }\r\n                                value={this.state.description}\r\n                            />\r\n                            {this.props.usertype === \"student\" ? (\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"cgpa\"\r\n                                        placeholder=\"CGPA\"\r\n                                        onChange={(e) =>\r\n                                            this.onChangeValue(\r\n                                                \"cgpa\",\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                        value={this.state.cgpa}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"roll_num\"\r\n                                        placeholder=\"Roll Number\"\r\n                                        onChange={(e) =>\r\n                                            this.onChangeValue(\r\n                                                \"roll_num\",\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                        value={this.state.roll_num}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"resume_link\"\r\n                                        placeholder=\"Resume Link\"\r\n                                        onChange={(e) =>\r\n                                            this.onChangeValue(\r\n                                                \"resume_link\",\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                        value={this.state.resume_link}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"year\"\r\n                                    placeholder=\"Graduation Year\"\r\n                                    onChange={(e) =>\r\n                                        this.onChangeValue(\r\n                                            \"year\",\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={this.state.resume_link}\r\n                                />\r\n                            )}\r\n                            <button\r\n                                name=\"submit\"\r\n                                className={classes.submit}\r\n                                onClick={this.submitHandler}\r\n                            >\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.userProfile,\r\n        usertype: state.userType,\r\n        email: state.userEmail,\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return { \r\n        updateprofile: (\r\n            dept,\r\n            roll_num,\r\n            cgpa,\r\n            degree,\r\n            resume_link,\r\n            description,\r\n            year\r\n        ) =>\r\n            dispatch(\r\n                actionCreators.updateprofile(\r\n                    dept,\r\n                    roll_num,\r\n                    cgpa,\r\n                    degree,\r\n                    resume_link,\r\n                    description,\r\n                    year\r\n                )\r\n            ),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./Register.module.css\";\r\nimport * as actionCreators from \"../../../store/actions/actionCreators\";\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        isValid: false,\r\n        accountType: \"student\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        reenterpass: \"\",\r\n        gen_id: \"\",\r\n        errors: [\"\"],\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"PlaceMentor | Register an account\";\r\n        this.props.setAuthError(\"\");\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        let errors = {};\r\n        let isValid = true;\r\n        this.props.setAuthError(\"\");\r\n        if (this.state.password.length < 6) {\r\n            this.props.setAuthError(\"Password has to be atleast 6 chars!\");\r\n            errors[\"password\"] = true;\r\n            errors[\"reenterpass\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (this.state.password !== this.state.reenterpass) {\r\n            this.props.setAuthError(\"Passwords must match !\");\r\n            errors[\"password\"] = true;\r\n            errors[\"reenterpass\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (this.state.username === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"username\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (this.state.email === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"email\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (this.state.password === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"password\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (this.state.reenterpass === \"\") {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"reenterpass\"] = true;\r\n        }\r\n        if (\r\n            this.state.accountType === \"recruiter\" &&\r\n            this.state.gen_id === \"\"\r\n        ) {\r\n            this.props.setAuthError(\"All fields are required!\");\r\n            errors[\"gen_id\"] = true;\r\n            isValid = false;\r\n        }\r\n        if (isValid)\r\n            this.props.register(\r\n                this.state.username,\r\n                this.state.password,\r\n                this.state.email,\r\n                this.state.accountType,\r\n                this.state.gen_id\r\n            );\r\n        this.setState({ ...this.state, errors: errors, isValid: isValid });\r\n    };\r\n\r\n    onChangeValue = (key, value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [key]: value,\r\n        });\r\n    };\r\n\r\n    changeType = (userType) => {\r\n        this.setState({\r\n            ...this.state,\r\n            accountType: userType,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.regContainer}>\r\n                <div className={classes.regForm}>\r\n                    <div className={classes.header}>\r\n                        Register into PlaceMentor\r\n                    </div>\r\n                    <div className={classes.typeSelector}>\r\n                        <button\r\n                            className={[\r\n                                classes.btnType,\r\n                                this.state.accountType === \"student\"\r\n                                    ? classes.active\r\n                                    : \"\",\r\n                            ].join(\" \")}\r\n                            onClick={() => this.changeType(\"student\")}\r\n                        >\r\n                            Student\r\n                        </button>\r\n                        <button\r\n                            className={[\r\n                                classes.btnType,\r\n                                this.state.accountType === \"recruiter\"\r\n                                    ? classes.active\r\n                                    : \"\",\r\n                            ].join(\" \")}\r\n                            onClick={() => this.changeType(\"recruiter\")}\r\n                        >\r\n                            Recruiter\r\n                        </button>\r\n                        <button\r\n                            className={[\r\n                                classes.btnType,\r\n                                this.state.accountType === \"alumni\"\r\n                                    ? classes.active\r\n                                    : \"\",\r\n                            ].join(\" \")}\r\n                            onClick={() => this.changeType(\"alumni\")}\r\n                        >\r\n                            Alumni\r\n                        </button>\r\n                    </div>\r\n                    <div className={classes.inputForm}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\"username\", e.target.value)\r\n                            }\r\n                            value={this.state.username}\r\n                            className={\r\n                                \"username\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\"email\", e.target.value)\r\n                            }\r\n                            value={this.state.email}\r\n                            className={\r\n                                \"email\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\"password\", e.target.value)\r\n                            }\r\n                            value={this.state.password}\r\n                            className={\r\n                                \"password\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"reenterpass\"\r\n                            placeholder=\"Re-Enter Password\"\r\n                            onChange={(e) =>\r\n                                this.onChangeValue(\r\n                                    \"reenterpass\",\r\n                                    e.target.value\r\n                                )\r\n                            }\r\n                            value={this.state.reenterpass}\r\n                            className={\r\n                                \"reenterpass\" in this.state.errors\r\n                                    ? classes.errorField\r\n                                    : \"\"\r\n                            }\r\n                        />\r\n                        {this.state.accountType === \"recruiter\" ? (\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"gen_id\"\r\n                                placeholder=\"Recruiter Genuiune ID\"\r\n                                onChange={(e) =>\r\n                                    this.onChangeValue(\"gen_id\", e.target.value)\r\n                                }\r\n                                value={this.state.gen_id}\r\n                                className={\r\n                                    \"gen_id\" in this.state.errors\r\n                                        ? classes.errorField\r\n                                        : \"\"\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                        <p className={classes.errorMsg}>\r\n                            {this.props.errorMsg}\r\n                        </p>\r\n                        <p className={classes.successMsg}>\r\n                            {this.props.successMsg}\r\n                        </p>\r\n                        <button\r\n                            name=\"submit\"\r\n                            className={classes.submit}\r\n                            onClick={this.submitHandler}\r\n                        >\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMsg: state.authError,\r\n        successMsg: state.authSuccess,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (uname, pass, email, type, gen_id) =>\r\n            dispatch(actionCreators.register(uname, pass, email, type, gen_id)),\r\n        setAuthError: (message) =>\r\n            dispatch(actionCreators.setAuthError(message)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport * as actionCreators from \"../../../store/actions/actionCreators\";\r\n\r\nclass Logout extends React.Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/login\" exact/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(actionCreators.logout());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\r\n","import classes from \"./CreateNotice.module.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions/actionCreators.js\";\r\n\r\nimport MainFrame from \"../../../Components/UI/MainFrame/MainFrame\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass CreateNotice extends React.Component {\r\n    state = {\r\n        subject: \"\",\r\n        content: \"\",\r\n        submitted: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"Create Notice | PlaceMentor\";\r\n    }\r\n\r\n    render() {\r\n        if (this.state.submitted) {\r\n            return <Redirect to=\"instiboard\" />;\r\n        }\r\n        return (\r\n            <MainFrame>\r\n                <h2>Notice Writer Box</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            subject: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.subject}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Subject\"\r\n                />\r\n                <textarea\r\n                    name=\"content\"\r\n                    name=\"\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            content: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.content}\r\n                    className={classes.contentInput}\r\n                    placeholder=\"Content\"\r\n                ></textarea>\r\n                <button\r\n                    onClick={() => {\r\n                        this.props.writeNotice(\r\n                            this.state.subject,\r\n                            this.state.content\r\n                        );\r\n                        this.setState({\r\n                            ...this.state,\r\n                            submitted: true\r\n                        })\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        writeNotice: (uname, content) => {\r\n            dispatch(actionCreators.createNotice(uname, content));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNotice);\r\n","import classes from \"./CreatePosition.module.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions/actionCreators.js\";\r\n\r\nimport MainFrame from \"../../../Components/UI/MainFrame/MainFrame\";\r\n\r\nclass CreatePosition extends React.Component {\r\n    state = {\r\n        isValid: false,\r\n        positionName: \"\",\r\n        deadline: \"\",\r\n        ctc: \"\",\r\n        jobDescription: \"\",\r\n        depts: \"\",\r\n        degrees: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"Create Position | PlaceMentor\";\r\n        // this.props.setPositionError(\"\");\r\n    }\r\n\r\n    submitHandler = () => {\r\n        // let errors = {};\r\n        // let isValid = true;\r\n        // this.props.setPositionError(\"\");\r\n        // if (this.state.positionName === \"\") {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"positionName\"] = true;\r\n        //     isValid = false;\r\n        // }\r\n        // if (this.state.ctc === \"\") {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"username\"] = true;\r\n        //     isValid = false;\r\n        // }\r\n        // if (this.state.email === \"\") {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"email\"] = true;\r\n        //     isValid = false;\r\n        // }\r\n        // if (this.state.password === \"\") {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"password\"] = true;\r\n        //     isValid = false;\r\n        // }\r\n        // if (this.state.reenterpass === \"\") {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"reenterpass\"] = true;\r\n        // }\r\n        // if (\r\n        //     this.state.accountType === \"recruiter\" &&\r\n        //     this.state.gen_id === \"\"\r\n        // ) {\r\n        //     this.props.setAuthError(\"All fields are required!\");\r\n        //     errors[\"gen_id\"] = true;\r\n        //     isValid = false;\r\n        // }\r\n        // if (isValid)\r\n        let d = new Date(this.state.deadline).getTime();\r\n        this.props.createPosition(\r\n            this.state.positionName,\r\n            this.props.username,\r\n            d/1000,\r\n            this.state.ctc,\r\n            this.state.jobDescription,\r\n            this.state.depts,\r\n            this.state.degrees\r\n        );\r\n        // this.setState({ ...this.state, errors: errors, isValid: isValid });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MainFrame>\r\n                <h2>Create a new Job Position</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"positionName\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            positionName: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.positionName}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Position Name\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"CTC\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            ctc: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.ctc}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"CTC\"\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"deadline\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            deadline: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.deadline}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"CTC\"\r\n                />\r\n                <textarea\r\n                    name=\"description\"\r\n                    name=\"\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            jobDescription: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.jobDescription}\r\n                    className={classes.contentInput}\r\n                    placeholder=\"Content\"\r\n                ></textarea>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"depts\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            depts: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.depts}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Departments\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"degrees\"\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            degrees: e.target.value,\r\n                        });\r\n                    }}\r\n                    value={this.state.degrees}\r\n                    className={classes.subjectInput}\r\n                    placeholder=\"Degrees\"\r\n                />\r\n                <button\r\n                    onClick={() => {\r\n                        this.submitHandler();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.username,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPosition: (\r\n            positionName,\r\n            companyName,\r\n            deadline,\r\n            ctc,\r\n            jobDescription,\r\n            depts,\r\n            degrees\r\n        ) => {\r\n            dispatch(\r\n                actionCreators.createPosition(\r\n                    positionName,\r\n                    companyName,\r\n                    deadline,\r\n                    ctc,\r\n                    jobDescription,\r\n                    depts,\r\n                    degrees\r\n                )\r\n            );\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePosition);\r\n","import classes from \"./SearchedNames.module.css\";\r\nimport React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\n\r\nconst searchedNames = (props) => {\r\n    let usernames = [];\r\n    for (let username of props.searchedNames) {\r\n        usernames.push(\r\n            <div className={classes.searchedName}>\r\n                <Link\r\n                    className={classes.searchedNameLink}\r\n                    to={\"/profile/\" + username}\r\n                >\r\n                    {username}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <MainFrame>\r\n            <div>{usernames}</div>\r\n        </MainFrame>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchedNames: state.searchedNames,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(searchedNames);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions/actionCreators\";\r\n\r\nimport classes from \"./Error.module.css\";\r\n\r\nclass ErrorDisplay extends React.Component {\r\n    render() {\r\n        if (this.props.errorMsg !== null) {\r\n            return (\r\n                <div className={classes.ErrorDisplay}>\r\n                    <div className={classes.errorMsg}>\r\n                        {this.props.errorMsg}\r\n                        {!this.props.errorMsg.startsWith(\"Network\") ? (\r\n                            <button\r\n                                className={classes.ok}\r\n                                onClick={this.props.clearError}\r\n                            >\r\n                                Ok\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div></div>;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMsg: state.errorMsg,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearError: () => dispatch(actionCreators.clearError()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorDisplay);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport * as LinkConstants from \"../../LinkNames\";\r\n\r\nimport MainFrame from \"../UI/MainFrame/MainFrame\";\r\nimport Notice from \"../../Containers/InstiBoard/Notice/Notice\";\r\n\r\nimport classes from \"./UnreadPositions.module.css\";\r\n\r\nclass UnreadPositions extends React.Component {\r\n    componentDidMount() {\r\n        document.title = \"PlaceMentor | Unreleased Positions\";\r\n    }\r\n\r\n    render() {\r\n        let notices = [];\r\n        let notice_objs = [];\r\n        for (let position_id in this.props.positions) {\r\n            this.props.positions[position_id][\"is_position\"] = true;\r\n            this.props.positions[position_id][\"time\"] = this.props.positions[\r\n                position_id\r\n            ].create_time;\r\n            notice_objs.push(this.props.positions[position_id]);\r\n        }\r\n\r\n        notice_objs = notice_objs.sort((a, b) => {\r\n            return a.time < b.time ? 1 : -1;\r\n        });\r\n        for (let notice of notice_objs) {\r\n            notices.push(\r\n                <Link\r\n                    key={(notice.is_position ? \"p\" : \"n\") + notice.id}\r\n                    to={\r\n                        notice.is_position\r\n                            ? `${LinkConstants.singleJobPosition}/${notice.id}`\r\n                            : `${LinkConstants.singleInstiBoardNotice}/${notice.id}`\r\n                    }\r\n                    className={classes.blockLinks}\r\n                >\r\n                    {!notice.is_position ? (\r\n                        <Notice\r\n                            title={notice.subject}\r\n                            time={notice.time}\r\n                            message={notice.content}\r\n                            sender={notice.author}\r\n                            unread={!notice.read}\r\n                            is_position={false}\r\n                        />\r\n                    ) : (\r\n                        <Notice\r\n                            title={notice.position_title}\r\n                            time={notice.time}\r\n                            message={notice.description}\r\n                            sender={notice.company}\r\n                            unread={!notice.read}\r\n                            is_position={true}\r\n                        />\r\n                    )}\r\n                </Link>\r\n            );\r\n        }\r\n \r\n        return (\r\n            <MainFrame> \r\n                <h2>Unreleased Positions</h2>\r\n                {notices}\r\n            </MainFrame>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notices: state.notices,\r\n        positions: state.unreleasedpositions,\r\n        userType: state.userType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getdata: () => dispatch(actionCreators.getData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnreadPositions);\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actionCreators from \"./store/actions/actionCreators\";\r\n\r\nimport classes from \"./App.module.css\";\r\n\r\nimport Content from \"./Components/UI/Content/Content\";\r\nimport MessageBox from \"./Containers/MessageBox/MessageBox\";\r\nimport InstiBoard from \"./Containers/InstiBoard/InstiBoard\";\r\nimport MyApplications from \"./Components/MyApplications/MyApplications\";\r\nimport JobProfiles from \"./Components/JobProfiles/JobProfiles\";\r\nimport Wrap from \"./hoc/Wrap/Wrap\"; \r\nimport NoticeReader from \"./Containers/InstiBoard/NoticeReader/NoticeReader\";\r\nimport JobPosition from \"./Containers/JobPosition/JobPosition\";\r\nimport ViewApplication from \"./Components/ViewApplication/ViewApplication\";\r\nimport UserProfile from \"./Components/UserProfile/UserProfile\";\r\n\r\nimport Login from \"./Containers/Auth/Login/Login\";\r\nimport UpdateProfile from \"./Containers/UpdateProfile/UpdateProfile\";\r\nimport Register from \"./Containers/Auth/Register/Register\";\r\nimport Logout from \"./Containers/Auth/Logout/Logout\";\r\nimport CreateNotice from \"./Containers/InstiBoard/CreateNotice/CreateNotice\";\r\nimport CreatePosition from \"./Containers/JobPosition/CreatePosition/CreatePosition\";\r\nimport SearchedNames from \"./Components/SearchedNames/SearchedNames\";\r\nimport ErrorDisplay from \"./Components/UI/Error/Error\";\r\nimport UnreadPositions from \"./Components/UnreadPositions/UnreadPositions\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        stakeholder_type: \"student\",\r\n    };\r\n    componentDidMount() {\r\n        this.props.autoLogin();\r\n        this.props.getdata();\r\n    }\r\n    render() {\r\n        let Routes = \"No proper stake holder type.\";\r\n        switch (this.props.usertype) {\r\n            case \"student\":\r\n                Routes = (\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/instiboard\"\r\n                            exact\r\n                            component={InstiBoard}\r\n                        />\r\n                        <Route\r\n                            path=\"/instiBoard/:id\"\r\n                            component={NoticeReader}\r\n                        />\r\n                        <Route\r\n                            path=\"/myapplications\"\r\n                            component={MyApplications}\r\n                        />\r\n                        <Route\r\n                            path=\"/application/:id\"\r\n                            component={ViewApplication}\r\n                        />\r\n                        <Route\r\n                            path=\"/my_profile\"\r\n                            component={UpdateProfile}\r\n                        />\r\n                        <Route\r\n                            path=\"/jobposition/:id\"\r\n                            component={JobPosition}\r\n                        />\r\n                        <Route path=\"/messages\" component={MessageBox} />\r\n                        <Route\r\n                            path=\"/searchedUsers\"\r\n                            exact\r\n                            component={SearchedNames}\r\n                        />\r\n                        <Route\r\n                            path=\"/profile/:username\"\r\n                            component={UserProfile}\r\n                        />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        {/* <Route path=\"/login\" exact component={Login} /> */}\r\n                        <Redirect from=\"/\" to=\"/instiboard\" />\r\n                    </Switch>\r\n                );\r\n                break;\r\n            case \"alumni\":\r\n                Routes = (\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/instiboard\"\r\n                            exact\r\n                            component={InstiBoard}\r\n                        />\r\n                        <Route\r\n                            path=\"/instiBoard/:id\"\r\n                            component={NoticeReader}\r\n                        />\r\n                        <Route\r\n                            path=\"/jobposition/:id\"\r\n                            component={JobPosition}\r\n                        />\r\n                        <Route path=\"/messages\" component={MessageBox} />\r\n                        <Route\r\n                            path=\"/searchedUsers\"\r\n                            exact\r\n                            component={SearchedNames}\r\n                        />\r\n                        <Route path=\"/my_profile\" component={UpdateProfile} />\r\n                        <Route\r\n                            path=\"/profile/:username\"\r\n                            component={UserProfile}\r\n                        />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        <Redirect from=\"/\" to=\"/instiboard\" />\r\n                    </Switch>\r\n                );\r\n                break;\r\n            case \"instiadmin\":\r\n                Routes = (\r\n                    <Switch>\r\n                        <Route path=\"/messages\" component={MessageBox} />\r\n                        <Route\r\n                            path=\"/instiboard\"\r\n                            exact\r\n                            component={InstiBoard}\r\n                        />\r\n                        <Route\r\n                            path=\"/instiBoard/:id\"\r\n                            component={NoticeReader}\r\n                        />\r\n                        <Route\r\n                            path=\"/profile/:username\"\r\n                            component={UserProfile}\r\n                        />\r\n                        <Route\r\n                            path=\"/recruiters\"\r\n                            exact\r\n                            component={UnreadPositions}\r\n                        /> \r\n                        <Route\r\n                            path=\"/jobposition/:id\"\r\n                            component={JobPosition}\r\n                        />\r\n                        <Route\r\n                            path=\"/createNotice\"\r\n                            exact\r\n                            component={CreateNotice}\r\n                        />\r\n                        <Route\r\n                            path=\"/searchedUsers\"\r\n                            exact\r\n                            component={SearchedNames}\r\n                        />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        <Redirect from=\"/\" to=\"/instiboard\" />\r\n                    </Switch>\r\n                );\r\n                break;\r\n            case \"recruiter\":\r\n                Routes = (\r\n                    <Switch>\r\n                        <Route path=\"/messages\" component={MessageBox} />\r\n                        <Route\r\n                            path=\"/profile/:username\"\r\n                            component={UserProfile}\r\n                        />\r\n                        <Route\r\n                            path=\"/application/:id\"\r\n                            component={ViewApplication}\r\n                        />\r\n                        <Route path=\"/jobprofiles\" component={JobProfiles} />\r\n                        <Route\r\n                            path=\"/jobposition/:id\"\r\n                            component={JobPosition}\r\n                        />\r\n                        <Route\r\n                            path=\"/searchedUsers\"\r\n                            exact\r\n                            component={SearchedNames}\r\n                        />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        <Route\r\n                            path=\"/createPosition\"\r\n                            component={CreatePosition}\r\n                        />\r\n                        <Redirect from=\"/\" to=\"/jobprofiles\" />\r\n                    </Switch>\r\n                );\r\n                break;\r\n            default:\r\n                Routes = null;\r\n        }\r\n        return (\r\n            <div /*className={classes.App}*/>\r\n                <ErrorDisplay />\r\n                <Content>\r\n                    {this.props.usertype !== null ? (\r\n                        Routes\r\n                    ) : (\r\n                        <Switch>\r\n                            <Route path=\"/login\" exact component={Login} />\r\n                            <Route\r\n                                path=\"/register\"\r\n                                exact\r\n                                component={Register}\r\n                            />\r\n                            <Redirect from=\"/\" to=\"/login\" />\r\n                        </Switch>\r\n                    )}\r\n                </Content>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usertype: state.userType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getdata: () => dispatch(actionCreators.getData()),\r\n        autoLogin: () => dispatch(actionCreators.autoLogin()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actionTypes from \"./actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    username: null,\r\n    userEmail: null,\r\n    userType: null,\r\n    userProfile: {},\r\n\r\n    authSuccess: null,\r\n    authError: null,\r\n    errorMsg: null,\r\n    successMsg: null,\r\n\r\n    searchedNames: [],\r\n    searchError: null,\r\n\r\n    searchedProfile: null,\r\n    profileError: null,\r\n\r\n    messages: {},\r\n    notices: {},\r\n    positions: {},\r\n    unread_positions: {},\r\n    unreleasedpositions:{},\r\n    applications: {},\r\n    notifications: {},\r\n\r\n    currentPosApplications: [],\r\n    currentPosFeedbacks: [],\r\n    current_application: null,\r\n\r\n    notificationsInterval: null,\r\n    lastDataFetchStamp: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                userId: null,\r\n                username: null,\r\n                email: null,\r\n                userType: null,\r\n                authError: null,\r\n                authSuccess: null,\r\n            };\r\n\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                authError:\r\n                    action.payload.message === undefined\r\n                        ? \"Try Again ! Not Connected to Internet.\"\r\n                        : action.payload.message,\r\n            };\r\n\r\n        case actionTypes.NORMAL_FAIL:\r\n            return {\r\n                ...state,\r\n                errorMsg:\r\n                    action.payload.message === undefined\r\n                        ? \"Try Again ! Not Connected to Internet.\"\r\n                        : action.payload.message,\r\n            };\r\n\r\n        case actionTypes.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMsg: null,\r\n            };\r\n\r\n        case actionTypes.AUTH_REGISTER:\r\n            return {\r\n                ...state,\r\n                authSuccess: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.AUTH_LOGIN:\r\n            localStorage.setItem(\r\n                \"authToken\",\r\n                JSON.stringify(action.payload.authToken)\r\n            );\r\n            return {\r\n                ...state,\r\n                username: action.payload.username,\r\n                userEmail: action.payload.userEmail,\r\n                userId: action.payload.userId,\r\n                userProfile: {...action.payload.profile},\r\n                userType: action.payload.userType,\r\n                authSuccess: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.payload.profile},\r\n            };\r\n\r\n        case actionTypes.AUTH_LOGOUT:\r\n            localStorage.removeItem(\"authToken\");\r\n            return {\r\n                ...state,\r\n                username: null,\r\n                userEmail: null,\r\n                userId: null,\r\n                userType: null,\r\n                authSuccess: action.payload.message,\r\n                messages: {},\r\n                notices: {},\r\n                positions: {},\r\n                applications: {},\r\n                notifications: {},\r\n            };\r\n\r\n        case actionTypes.LOAD_INFORMATION:\r\n            return {\r\n                ...state,\r\n                messages: { ...action.payload.messages },\r\n                notices: { ...action.payload.notices },\r\n                positions: { ...action.payload.positions },\r\n                unreleasedpositions: { ...action.payload.unreleasedpositions },\r\n                applications: { ...action.payload.applications },\r\n                notifications: { ...action.payload.notifications },\r\n            };\r\n\r\n        case actionTypes.REMOVE_NOTIFICATION:\r\n            delete state.notifications[\r\n                `notify${action.payload.entityType}${action.payload.entityId}`\r\n            ];\r\n            return state;\r\n\r\n        case actionTypes.FETCH_USER_NAMES:\r\n            return { ...state, searchedNames: action.payload.usernames };\r\n\r\n        case actionTypes.FETCH_USER_NAMES_ERROR:\r\n            return { ...state, searchError: action.payload.errorMsg };\r\n\r\n        case actionTypes.GET_USER_PROFILE:\r\n            return { ...state, searchedProfile: action.payload.profile };\r\n\r\n        case actionTypes.GET_USER_PROFILE_ERROR:\r\n            return { ...state, profileError: action.payload.errorMsg };\r\n\r\n        case actionTypes.REMOVE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notifications: {\r\n                    ...state.notifications,\r\n                    [`notify${action.payload.entityType}${action.payload.entityId}`]: undefined,\r\n                },\r\n            };\r\n\r\n        case actionTypes.APPLY_TO_POSITION:\r\n            return {\r\n                ...state,\r\n                applications: {\r\n                    ...state.applications,\r\n                    [`${action.payload.application.id}`]: action.payload\r\n                        .application,\r\n                },\r\n                successMsg: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.CREATE_FEEDBACK:\r\n            return {\r\n                ...state,\r\n                successMsg: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.LOAD_POSITION:\r\n            return {\r\n                ...state,\r\n                currentPosApplications: action.payload.currentPosApplications,\r\n                currentPosFeedbacks: action.payload.currentPosFeedbacks,\r\n            };\r\n\r\n        case actionTypes.RELEASE_POSITION:\r\n            return {\r\n                ...state,\r\n                positions: {\r\n                    ...state.positions,\r\n                    [`${action.payload.position.id}`]: action.payload.position,\r\n                },\r\n                successMsg: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.LOAD_APPLICATION:\r\n            return {\r\n                ...state,\r\n                current_application: action.payload.application,\r\n                successMsg: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.SELECT_APPLICATION:\r\n            return {\r\n                ...state,\r\n                successMsg: action.payload.message,\r\n            };\r\n\r\n        case actionTypes.CREATE_MESSAGE:\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport thunk from \"redux-thunk\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport reducer from \"./store/reducer\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}